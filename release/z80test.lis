z80test.asm:
     1                          MODEA		equ 0
     2                          STATA		equ 1
     3                          CLOCKA		equ 1
     4                          COMMA		equ 2
     5                          RECA		equ 3
     6                          TRANSA		equ 3
     7                          IPCHANGE	equ 4
     8                          AUXCTRL		equ 4
     9                          ISR		equ 5
    10                          IMR		equ 5
    11                          CNTMSB		equ 6
    12                          CNTLSB		equ 7
    13                          MODEB		equ 8
    14                          STATB		equ 9
    15                          CLOCKB		equ 9
    16                          COMMB		equ 10
    17                          RECB		equ 11
    18                          TRANSB		equ 11
    19                          IVR		equ 12
    20                          INPORT		equ 13
    21                          OPCTRL		equ 13
    22                          STRTCNT		equ 14
    23                          OPSET		equ 14
    24                          STOPCNT		equ 15
    25                          OPRES		equ 15
    26                          
    27                          conin		equ 0f209h
    28                          conout		equ 0f20ch
    29                          
    30                          		org $8000
    31   000000 1845            		jr	shardStart
    32                          
    33   000002 5348415244202020shardeye:	defm	"SHARD           "
                2020202020202020
    34   000012 0800            vers:		defw	8
    35   000014 0000            mode:		defw	0
    36   000016 0000            id4:		defw	0
    37   000018 0000            id5:		defw	0
    38   00001a 0000            id6:		defw	0
    39   00001c 0000            id7:		defw	0
    40   00001e 0000            		defw	0
    41   000020 0000            		defw	0
    42   000022 c34d00          		jp	shout
    43   000025 c34e00          		jp	shbin
    44   000028 c34f00                  	jp	shbout
    45   00002b c35000          		jp	shiocnt
    46   00002e c38900          		jp	shend
    47   000031 c38a00          		jp	shsinf
    48   000034 c38b00          		jp	shsacc
    49   000037 0000            		defw 	0
    50   000039 ffff            limit:		defw 	0ffffh
    51   00003b 0000            		defw	0
    52   00003d 0000            		defw	0
    53   00003f 0000            		defw	0
    54   000041 0000            		defw	0
    55   000043 0000            		defw	0
    56   000045 0000            		defw	0
    57                          
    58   000047 210200          shardStart:	ld	hl, shardeye
    59   00004a c31e14          		jp	0141Eh
    60                          
    61   00004d c9              shout:		ret
    62   00004e c9              shbin:		ret
    63   00004f c9              shbout:		ret
    64                          
    65                          
    66                          ;          Eingang:         A     Kanalnummer (0...31)
    67                          ;                           BC    1
    68                          ;          Ausgang:         BC    Kanaltyp
    69                          ;
    70                          ;          Zweck:           Informiert EUMEL-0, welche IO für den angegebenen Kanal
    71                          ;                           sinnvoll ist. Die Rückmeldung in BC wird bitweise interpre­
    72                          ;                           tiert:
    73                          ;
    74                          ;                           Bit 0 gesetzt  <=>      'inputinterrupt' kann kommen.
    75                          ;                           Bit 1 gesetzt  <=>      OUTPUT ist sinnvoll.
    76                          ;                           Bit 2 gesetzt  <=>      BLOCKIN ist sinnvoll.
    77                          ;                           Bit 3 gesetzt  <=>      BLOCKOUT ist sinnvol.
    78                          ;                           Bit 4 gesetzt  <=>      IOCONTROL "format" ist sinn­
    79                          ;                                                   voll.
    80                          ;
    81                          ;     #dx("IOCONTROL ""frout""")##goalpage("frout")#
    82                          ;
    83                          ;          Eingang:         A     Kanalnummer (1...15)
    84                          ;                           BC    2
    85                          ;          Ausgang:         BC    Anzahl Zeichen, die nächster OUTPUT übernimmt
    86                          ;                           C-Flag gesetzt <=> Puffer leer
    87                          ;
    88                          ;          Zweck:           Liefert Information über die Belegung des Puffers. Diese
    89                          ;                           Information wird von EUMEL-0 zum Scheduling benutzt.
    90                          ;
    91                          ;          Achtung:         #on("i")#Wenn EUMEL-0 längere Zeit kein OUTPUT gemacht hat,
    92                          ;                           muß irgendwann BC > 49 gemeldet werden.#off("i")#
    93                          ;
    94                          ;          Hinweis:         Unter Berücksichtigung des oben Gesagten darf "gelogen"
    95                          ;                           werden. Man kann z.B. immer 50 in BC zurückmelden, muß
    96                          ;                           dann aber schlechtere Nutzung der CPU bei Multi-User-
    97                          ;                           Systemen in Kauf nehmen.
    98                          ;
    99                          ;                           Falls auf dem angegebenen Kanal ein Drucker mit eigenem
   100                          ;                           Puffer über Parallelschnittstelle angeschlossen ist (siehe
   101                          ;                           S.#topage("druck")#) und man auf einen SHard-internen Puffer verzichtet hat,
   102                          ;                           sollte bei 'Druckerpuffer voll' 0 in BC und 'NC' zurückge­
   103                          ;                           meldet werden. Wenn aber Zeichen übernommen werden
   104                          ;                           können, sollte 50 in BC und 'C-Flag gesetzt' gemeldet
   105                          ;                           werden.
   106                          ;
   107                          ;          Vorschlag:       Falls der Kanal nicht existiert oder nicht für Stream-IO zur
   108                          ;                           Verfügung steht, sollten 200 in BC und C-Flag gesetzt
   109                          ;                           zurückgemeldet werden.
   110                          
   111   000050 f5              shiocnt:	push	af		;save channel-nr
   112   000051 79              		ld	a, c
   113   000052 3d              		dec	a
   114   000053 07              		rlca
   115   000054 4f              		ld	c, a
   116   000055 217c00          		ld	hl, iotab
   117   000058 09              		add	hl, bc
   118   000059 7e              		ld	a, (hl)
   119   00005a 23              		inc	hl
   120   00005b 66              		ld	h, (hl)
   121   00005c 6f              		ld	l, a
   122   00005d e9              		jp	(HL)
   123                          
   124                          ;--------------------------------------------------------------
   125   00005e f1              iotyp:		pop	af		;channel
   126   00005f af              		xor	a
   127   000060 2004            		jr	NZ, iotyp1	;channel <> 0
   128   000062 010c00          		ld	BC, 12		;blockio
   129   000065 c9              		ret
   130   000066 010200          iotyp1:		ld	BC, 2
   131   000069 c9              		ret
   132                          
   133                          ;--------------------------------------------------------------
   134   00006a f1              iofrout:	pop	af
   135   00006b fe01            		cp	1
   136   00006d 2005            		jr	NZ, iofrout1
   137   00006f 013200          		ld	BC, 50
   138   000072 3f              		ccf
   139   000073 c9              		ret
   140   000074 01c800          iofrout1:	ld	BC, 200
   141   000077 3f              		ccf
   142   000078 c9              		ret
   143                          
   144                          ;--------------------------------------------------------------
   145   000079 c9              ioweiter:	ret
   146                          ;--------------------------------------------------------------
   147                          iosize:
   148                          ;--------------------------------------------------------------
   149                          ioformat:
   150                          ;--------------------------------------------------------------
   151   00007a f1              iounknown:	pop	AF
   152   00007b c9              		ret
   153                          
   154   00007c 5e00            iotab:		defw	iotyp
   155   00007e 6a00            		defw	iofrout
   156   000080 7a00            		defw	iounknown
   157   000082 7900            		defw	ioweiter
   158   000084 7a00            		defw	iosize
   159   000086 7a00            		defw	iounknown
   160   000088 7a              		defb	ioformat
   161                          
   162   000089 c9              shend:		ret
   163   00008a c9              shsinf:		ret
   164   00008b c9              shsacc:		ret
   165                          
   166                          
   167   00008c cdce00          opend:		call	getDiskno
   168   00008f d8              		ret	C
   169   000090 4f              		ld	c, a
   170   000091 cd0cf2          		call	conout
   171                          
   172   000094 d630            		sub	a, '0'
   173   000096 47              		ld	b, a
   174   000097 3e4f            		ld	a, 'O'
   175   000099 cd7501          		call	serout
   176   00009c 78              		ld	a, b
   177   00009d cd7501          		call	serout
   178   0000a0 cd7501          		call	serout
   179   0000a3 cd7501          		call	serout
   180                          
   181   0000a6 cd5801          		call	serin
   182   0000a9 fe41            		cp	'A'
   183   0000ab c0              		ret	NZ
   184                          
   185   0000ac cdd800          		call	gettext
   186   0000af c9              		ret
   187                          
   188                          
   189   0000b0 cdce00          closedisk:	call	getDiskno
   190   0000b3 d8              		ret	C
   191   0000b4 4f              		ld	c, a
   192   0000b5 cd0cf2          		call	conout
   193                          
   194   0000b8 d630            		sub	a, '0'
   195   0000ba 47              		ld	b, a
   196   0000bb 3e43            		ld	a, 'C'
   197   0000bd cd7501          		call	serout
   198   0000c0 78              		ld	a, b
   199   0000c1 cd7501          		call	serout
   200   0000c4 cd7501          		call	serout
   201   0000c7 cd7501          		call	serout
   202                          
   203   0000ca cd5801          		call	serin
   204   0000cd c9              		ret
   205                          
   206                          
   207   0000ce cd09f2          getDiskno:	call	conin
   208   0000d1 fe30            		cp	'0'
   209   0000d3 d8              		ret	C
   210   0000d4 fe3a            		cp	'9'+1
   211   0000d6 3f              		ccf
   212   0000d7 c9              		ret
   213                          
   214                          gettext:	;ld	hl, line
   215   0000d8 cd09f2          gettext1:	call	conin
   216   0000db cd7501          		call	serout
   217   0000de 4f              		ld	c, a
   218   0000df cd0cf2          		call	conout
   219   0000e2 fe0d            		cp	13
   220   0000e4 20f2            		jr	NZ, gettext1
   221   0000e6 c9              		ret
   222                          
   223                          
   224                          
   225                          
   226                          
   227                          ;--------------------------------------------------------------
   228                          ; read sector
   229                          ; diskno, track, sector, dmaad
   230                          ;--------------------------------------------------------------
   231                          readsec:
   232   0000e7 3e52            		ld	a, 'R'		;read
   233   0000e9 cd7501          		call	serout
   234   0000ec 3a8001          		ld	a, (diskno)	;disk 0
   235   0000ef cd7501          		call	serout
   236   0000f2 3a8101          		ld	a, (track)	;track 2
   237   0000f5 cd7501          		call	serout
   238   0000f8 3a8201          		ld	a, (sector)	;sector 0
   239   0000fb cd7501          		call	serout
   240                          
   241   0000fe cd5801          		call	serin		;check ack
   242   000101 38e4            		jr	C, readsec	;timeout?, retry
   243                          
   244                          readsec3:
   245   000103 fe41            		cp	'A'
   246   000105 20e0            		jr	NZ, readsec	;ack NOT OK, retry
   247                          readsec2:
   248   000107 2a8301          		ld	hl, (dmaad)
   249   00010a 1680            		ld	d, 128
   250   00010c cd6b01          readsec1:	call	serinfast
   251   00010f 77              		ld	(hl), a
   252   000110 23              		inc	hl
   253   000111 15              		dec	d
   254   000112 20f8            		jr	NZ, readsec1
   255                          
   256   000114 af              		xor	a
   257   000115 c9              		ret
   258                          
   259                          ;--------------------------------------------------------------
   260                          ; write sector
   261                          ; diskno, track, sector, dmaad
   262                          ;--------------------------------------------------------------
   263                          writesec:
   264   000116 3e57            		ld	a, 'W'		;write
   265   000118 cd7501          		call	serout
   266   00011b 3a8001          		ld	a, (diskno)	;disk 0
   267   00011e cd7501          		call	serout
   268   000121 3a8101          		ld	a, (track)	;track 2
   269   000124 cd7501          		call	serout
   270   000127 3a8201          		ld	a, (sector)	;sector 0
   271   00012a cd7501          		call	serout
   272                          
   273   00012d 0680            		ld	b, 128
   274   00012f 2a8301          		ld	hl, (dmaad)
   275   000132 7e              writesec1:	ld	a, (hl)
   276   000133 23              		inc	hl
   277   000134 cd7501          		call	serout
   278   000137 10f9            		djnz	b, writesec1
   279                          
   280   000139 cd5801          		call	serin		;check ack
   281   00013c 38d8            		jr	C, writesec	;timeout?, retry
   282   00013e fe41            		cp	a, 'A'		;ack?
   283   000140 20d4            		jr	NZ, writesec	;error, retry
   284                          
   285   000142 af              		xor	a
   286   000143 c9              		ret
   287                          
   288                          ;--------------------------------------------------------------
   289                          ; get a character in A from rs232 (1)
   290                          ;
   291                          ;--------------------------------------------------------------
   292                          chrin:
   293   000144 db01            		in	a, (STATA)
   294   000146 e601            		and	a, 1
   295   000148 28fa            		jr	Z, chrin
   296   00014a db03            		in	a, (RECA)
   297   00014c c9              		ret
   298                          
   299                          ;--------------------------------------------------------------
   300                          ; output a character in A over rs232 (1)
   301                          ;
   302                          ;--------------------------------------------------------------
   303                          chrout:
   304   00014d f5              		push	AF
   305   00014e db01            chrout1:	in	a, (STATA)
   306   000150 e604            		and	a, 4
   307   000152 28fa            		jr	Z, chrout1
   308   000154 f1              		pop	AF
   309   000155 d303            		out	(TRANSA), a
   310   000157 c9              		ret
   311                          
   312                          ;--------------------------------------------------------------
   313                          ; get a character in A from rs232 (2)
   314                          ;
   315                          ;--------------------------------------------------------------
   316   000158 010000          serin:		ld	bc, 0
   317   00015b db09            serin1:		in	a, (STATB)
   318   00015d e601            		and	a, 1
   319   00015f 2007            		jr	NZ, serin2
   320   000161 10f8            		djnz	b, serin1
   321   000163 0d              		dec	c
   322   000164 20f5            		jr	NZ, serin1
   323   000166 37              		scf
   324   000167 c9              		ret
   325   000168 db0b            serin2:		in	a, (RECB)
   326   00016a c9              		ret
   327                          
   328                          
   329   00016b 3a0900          serinfast:	ld	a, (STATB)
   330   00016e e601            		and	a, 1
   331   000170 28f9            		jr	Z, serinfast
   332   000172 db0b            		in	a, (RECB)
   333   000174 c9              		ret
   334                          
   335                          
   336                          ;--------------------------------------------------------------
   337                          ; output a character in A over rs232 (2)
   338                          ;
   339                          ;--------------------------------------------------------------
   340                          serout:
   341   000175 f5              		push	AF
   342   000176 db09            serout1:	in	a, (STATB)
   343   000178 e604            		and	a, 4
   344   00017a 28fa            		jr	Z, serout1
   345   00017c f1              		pop	AF
   346   00017d d30b            		out	(TRANSB), a
   347   00017f c9              		ret
   348                          
   349   000180 00              diskno:		defb	0
   350   000181 00              track:		defb	0
   351   000182 00              sector:		defb	0
   352   000183 0000            dmaad:		defw	0
   353                          
