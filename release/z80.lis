z80.asm:
     1                          		;FNAME "z80.bin"
     2                          
     3                          		include "mc68681.asm"
mc68681.asm:
     1                          ;--------------------------------------------------------------------------------
     2                          ; equates for MC68681 DUART
     3                          ;
     4                          ; see ./doc/scc68681.pdf
     5                          ;--------------------------------------------------------------------------------
     6                          MODEA		equ	0
     7                          STATA		equ	1
     8                          CLOCKA		equ	1
     9                          COMMA		equ	2
    10                          RECA		equ	3
    11                          TRANSA		equ	3
    12                          IPCHANGE	equ	4
    13                          AUXCTRL		equ	4
    14                          ISR		equ	5
    15                          IMR		equ	5
    16                          CNTMSB		equ	6
    17                          CNTLSB		equ	7
    18                          MODEB		equ	8
    19                          STATB		equ	9
    20                          CLOCKB		equ	9
    21                          COMMB		equ	10
    22                          RECB		equ	11
    23                          TRANSB		equ	11
    24                          IVR		equ	12
    25                          INPORT		equ	13
    26                          OPCTRL		equ	13
    27                          STRTCNT		equ	14
    28                          OPSET		equ	14
    29                          STOPCNT		equ	15
    30                          OPRES		equ	15
    31                          
z80.asm:
     4                          
     5                          CR:		equ	0dh
     6                          
     7                          
     8                          VARS		equ	$FFF0			;stack grows downwards from this address
     9                          sum:		equ	0
    10                          addr:		equ	1
    11                          echo:		equ	3			;0 = off, 1 = on
    12                          
    13                          
    14                          
    15                          		ORG     0000h
    16                          
    17   000000 f3              		di				;disable interrupts
    18   000001 ed56            		im	1			;interrup mode 1 = jp @ 038h
    19                          
    20   000003 3e80            		ld	a, 80h			;OP7 = HIGH, deactivate RAM
    21   000005 d30f            		out	(OPRES), a
    22                          
    23   000007 210000          		ld	HL, 0			;copy ROM to RAM from
    24   00000a 110000          		ld	DE, 0			;to
    25   00000d 010018          		ld	BC, 1800h		;length, 6KB
    26   000010 edb0            		ldir
    27                          
    28   000012 21001a          		ld	HL, 1A00h		;copy ROM to RAM from $1A00
    29   000015 1100fa          		ld	DE, 0FA00h		;to $FA00 (CP/M Bios)
    30   000018 010006          		ld	BC, 600h		;length, 6 pages
    31   00001b edb0            		ldir
    32                          
    33   00001d ed43f1ff        		ld	(VARS + addr), BC	;set addr to zero
    34                          
    35   000021 31f0ff          		ld	SP, VARS		;load stack-pointer
    36                          
    37   000024 dd21f0ff        		ld	IX, VARS
    38   000028 dd360301        		ld	(IX + echo), 1		;echo on
    39                          
    40   00002c 3e4a            		ld	a, $4A			;RX+TX off and
    41   00002e d302            		out	(COMMA),a		;RESET ERROR
    42   000030 d30a            		out	(COMMB),a
    43                          
    44   000032 3e30            		ld	a, $30			;RESET TRANS
    45   000034 d302            		out	(COMMA),a
    46   000036 d30a            		out	(COMMB),a
    47                          
    48   000038 3e20            		ld	a, $20			;RESET RECV
    49   00003a d302            		out	(COMMA),a
    50   00003c d30a            		out	(COMMB),a
    51                          
    52   00003e 3e10            		ld	a, $10			;RESET to MODE REG1
    53   000040 d302            		out	(COMMA),a
    54   000042 d30a            		out	(COMMB),a
    55                          
    56   000044 3ee0            		ld	a, $E0			;BRG set 2 and timer = X1/CLK
    57   000046 d304            		out	(AUXCTRL),a
    58                          
    59   000048 3e00            		ld	a, 0			;load timer with
    60   00004a d306            		out	(CNTMSB),a		;
    61   00004c 3e02            		ld	a, 2			;57600 BAUD
    62   00004e d307            		out	(CNTLSB),a
    63                          
    64                          ;		in	a, (COMMA)		;Switch to test baudrates
    65                          
    66   000050 3e66            		ld	a, $66			;115200 BAUD
    67   000052 d301            		out	(CLOCKA),a
    68                          ;		ld	a, $66			;
    69   000054 d309            		out	(CLOCKB),a
    70                          
    71                          
    72   000056 3e13            		ld	a, $13			;no RTS handshake + 8bits no parity
    73   000058 d300            		out	(MODEA),a
    74   00005a d308            		out	(MODEB),a
    75                          
    76   00005c 3e07            		ld	a, $07			;no CTS handshake + 1 stopbit
    77   00005e d300            		out	(MODEA),a
    78   000060 d308            		out	(MODEB),a
    79                          
    80   000062 3e00            		ld	a, 0			;OP2-7 output
    81   000064 d30d            		out	(OPCTRL),a
    82                          
    83                          ;		ld	a, %11111111		;out = low; inverting!
    84                          ;		out	(OPSET),a
    85                          
    86                          ;		ld	a, %10101010
    87                          ;		out	(OPRES),a
    88                          
    89   000066 3e00            		ld	a, 0			;IRQS AUS
    90   000068 d305            		out	(IMR),a
    91                          
    92   00006a 3e05            		ld	a, 5			;RX+TX AN
    93   00006c d302            		out	(COMMA),a
    94   00006e d30a            		out	(COMMB),a
    95                          
    96                          
    97   000070 3e80            		ld	a, 080h			;OP7 = LOW, activate RAM
    98   000072 d30e            		out	(OPSET), a
    99                          
   100                          
   101   000074 0e20            		ld	c, 32			;output space
   102   000076 0600            		ld	b, 0			;test how long it takes to send
   103   000078 cdc002          		call	conout
   104   00007b db01            wait:		in	a, (STATA)
   105   00007d 04              		inc	b
   106   00007e e604            		and	4
   107   000080 28f9            		jr	Z, wait
   108                          
   109   000082 78              		ld	a, b			;if b < 10
   110   000083 fe0a            		cp	10			;test baudrate is already acrivated
   111   000085 3802            		jr	C, printmenu
   112   000087 db02            		in	a, (COMMA)		;switch to test baudrates
   113                          
   114                          
   115                          ;--------------------------------------------------------------
   116                          ; print menu
   117                          ; print prompt
   118                          ; read upper key
   119                          ; check if key is found in menukey
   120                          ; read jmp-address and jump to subroutine
   121                          ;--------------------------------------------------------------
   122                          printmenu:
   123   000089 211803          		ld      HL, menutext
   124   00008c cda902          		call	printstr
   125                          
   126                          printprompt:
   127   00008f cd1b05          		call	newline
   128   000092 0e3e            		ld	c, '>'
   129   000094 cd1b02          		call	printaddr
   130                          
   131                          enterkey:
   132   000097 0e00            		ld	c, 0			;offset in jumptable
   133   000099 21f302          		ld	HL, menukey		;number auf keys
   134   00009c 46              		ld	b, (HL)			;in b
   135   00009d 23              		inc	HL
   136   00009e cd2b05          		call	getupper		;read upper key
   137                          enterkey2:
   138   0000a1 be              		cp	(HL)			;key found?
   139   0000a2 2807            		jr	Z, enterkey1		;yes ==>
   140   0000a4 23              		inc	HL
   141   0000a5 0c              		inc	c
   142   0000a6 0c              		inc	c
   143   0000a7 10f8            		djnz	enterkey2		;decrease b and jump
   144   0000a9 18ec            		jr	enterkey
   145                          enterkey1:
   146   0000ab 0600            		ld	b, 0			;add offset in BC
   147   0000ad 210003          		ld	HL, menutab		;to base
   148   0000b0 09              		add	HL, BC
   149   0000b1 018f00          		ld	BC, printprompt		;push return-address
   150   0000b4 c5              		push	BC
   151   0000b5 5e              		ld	e, (HL)			;load jp address in DE
   152   0000b6 23              		inc	HL
   153   0000b7 56              		ld	d, (HL)
   154   0000b8 eb              		ex	DE, HL			;in HL now
   155   0000b9 e9              		jp	(HL)
   156                          
   157                          
   158                          ;--------------------------------------------------------------
   159                          ; open a diskfile (and close if already assigned)
   160                          ;--------------------------------------------------------------
   161                          opendisk:
   162   0000ba cdfd00          		call	getDiskno
   163   0000bd d8              		ret	C
   164                          
   165   0000be 4f              		ld	c, a
   166   0000bf cdc002          		call	conout
   167                          
   168   0000c2 d630            		sub	a, '0'
   169   0000c4 47              		ld	b, a
   170   0000c5 3e4f            		ld	a, 'O'
   171   0000c7 cde802          		call	serout
   172   0000ca 78              		ld	a, b
   173   0000cb cde802          		call	serout
   174   0000ce cde802          		call	serout
   175   0000d1 cde802          		call	serout
   176                          
   177   0000d4 cdcc02          		call	serintime
   178   0000d7 d8              		ret	C
   179   0000d8 fe41            		cp	'A'
   180   0000da c0              		ret	NZ
   181                          
   182   0000db cd0d01          		call	getfilename
   183   0000de c9              		ret
   184                          
   185                          ;--------------------------------------------------------------
   186                          ; close a diskfile
   187                          ;--------------------------------------------------------------
   188                          closedisk:
   189   0000df cdfd00          		call	getDiskno
   190   0000e2 d8              		ret	C
   191                          
   192   0000e3 4f              		ld	c, a
   193   0000e4 cdc002          		call	conout
   194                          
   195   0000e7 d630            		sub	a, '0'
   196   0000e9 47              		ld	b, a
   197   0000ea 3e43            		ld	a, 'C'
   198   0000ec cde802          		call	serout
   199   0000ef 78              		ld	a, b
   200   0000f0 cde802          		call	serout
   201   0000f3 cde802          		call	serout
   202   0000f6 cde802          		call	serout
   203                          
   204   0000f9 cdcc02          		call	serintime
   205   0000fc c9              		ret
   206                          
   207                          
   208                          ;--------------------------------------------------------------
   209                          ; enter disk number (0-9)
   210                          ;--------------------------------------------------------------
   211                          getDiskno:
   212   0000fd 21d704          		ld	HL, disktext
   213   000100 cda902          		call	printstr
   214   000103 cdb702          		call	conin
   215   000106 fe30            		cp	'0'
   216   000108 d8              		ret	C
   217   000109 fe3a            		cp	'9'+1
   218   00010b 3f              		ccf
   219   00010c c9              		ret
   220                          
   221                          ;--------------------------------------------------------------
   222                          ; enter text (filename) delimited by CR and send to SER:
   223                          ;--------------------------------------------------------------
   224   00010d 21f004          getfilename:	ld	HL, filetext
   225   000110 cda902          		call	printstr
   226                          getfilename1:
   227   000113 cdb702          		call	conin
   228   000116 cde802          		call	serout
   229   000119 4f              		ld	c, a
   230   00011a cdc002          		call	conout
   231   00011d fe0d            		cp	13
   232   00011f 20f2            		jr	NZ, getfilename1
   233   000121 c9              		ret
   234                          
   235                          ;--------------------------------------------------------------
   236                          ; jump to CP/M
   237                          ;--------------------------------------------------------------
   238                          cpm:
   239   000122 c300fa          		jp	0FA00h
   240                          ;--------------------------------------------------------------
   241                          ; jump to printmenu
   242                          ;--------------------------------------------------------------
   243                          questionmark:
   244   000125 c1              		pop	BC
   245   000126 c38900          		jp	printmenu
   246                          
   247                          ;--------------------------------------------------------------
   248                          ; exit from monitor
   249                          ;--------------------------------------------------------------
   250                          ;exit:		pop	BC
   251                          ;		ld	SP, (VARS + oldstack)
   252                          ;		ret
   253                          
   254                          
   255                          ;--------------------------------------------------------------
   256                          ; jump to (addr)
   257                          ;--------------------------------------------------------------
   258   000129 2af1ff          goto:		ld	HL, (VARS + addr)
   259   00012c e9              		jp	(HL)
   260                          
   261                          
   262                          ;--------------------------------------------------------------
   263                          ; Disassemble 22 lines starting from (addr)
   264                          ;--------------------------------------------------------------
   265                          disass:
   266   00012d 0616            		ld	B, 22
   267   00012f ed5bf1ff        		ld	DE, (VARS + addr)
   268   000133 cd1b05          		call	newline
   269                          disass1:
   270   000136 c5              		push	BC
   271   000137 cd3405          		call	DISASM
   272   00013a cd1b05          		call	newline
   273   00013d c1              		pop	BC
   274   00013e 10f6            		djnz	disass1
   275                          
   276   000140 ed53f1ff        		ld	(VARS + addr), DE	;save new address
   277   000144 c9              		ret
   278                          
   279                          ;--------------------------------------------------------------
   280                          ;
   281                          ;--------------------------------------------------------------
   282                          fillmem:
   283   000145 21c504          		ld	HL, filltext
   284   000148 cda902          		call	printstr
   285                          
   286   00014b cd7502          		call	gethexbyte		;get from-addr
   287   00014e 67              		ld	h, a
   288   00014f cd7502          		call	gethexbyte
   289   000152 6f              		ld	l, a
   290   000153 e5              		push	HL
   291   000154 e5              		push	HL
   292                          
   293   000155 21ba04          		ld	HL, lentext
   294   000158 cda902          		call	printstr
   295   00015b cd7502          		call	gethexbyte		;get length
   296   00015e 47              		ld	b, a
   297   00015f cd7502          		call	gethexbyte
   298   000162 4f              		ld	c, a
   299                          
   300   000163 78              		ld	a, b			; if BC = 0
   301   000164 b1              		or	a, c
   302   000165 c8              		ret	Z			; return
   303   000166 0b              		dec	BC
   304                          
   305   000167 21d004          		ld	HL, withtext
   306   00016a cda902          		call	printstr
   307   00016d cd7502          		call	gethexbyte
   308                          
   309   000170 d1              		pop	DE			; DE = HL + 1
   310   000171 13              		inc	DE
   311                          
   312   000172 e1              		pop	HL
   313   000173 77              		ld	(HL), a
   314                          
   315   000174 78              		ld	a, b
   316   000175 b1              		or	a, c
   317   000176 c8              		ret	Z
   318                          
   319   000177 edb0            		LDIR
   320                          
   321   000179 c9              		ret
   322                          
   323                          ;--------------------------------------------------------------
   324                          ;
   325                          ;--------------------------------------------------------------
   326                          transfer:
   327   00017a 21ab04          		ld	HL, transtext
   328   00017d cda902          		call	printstr
   329                          
   330   000180 cd7502          		call	gethexbyte		;get from-addr
   331   000183 67              		ld	h, a
   332   000184 cd7502          		call	gethexbyte
   333   000187 6f              		ld	l, a
   334   000188 e5              		push	HL
   335                          
   336   000189 21ba04          		ld	HL, lentext
   337   00018c cda902          		call	printstr
   338   00018f cd7502          		call	gethexbyte		;get length
   339   000192 47              		ld	b, a
   340   000193 cd7502          		call	gethexbyte
   341   000196 4f              		ld	c, a
   342                          
   343   000197 21c004          		ld	HL, totext
   344   00019a cda902          		call	printstr
   345   00019d cd7502          		call	gethexbyte		;get dest-addr
   346   0001a0 57              		ld	d, a
   347   0001a1 cd7502          		call	gethexbyte
   348   0001a4 5f              		ld	e, a
   349                          
   350   0001a5 e1              		pop	HL
   351                          
   352   0001a6 edb0            		LDIR
   353                          
   354   0001a8 c9              		ret
   355                          
   356                          ;--------------------------------------------------------------
   357                          ; change a byte in (addr)
   358                          ;--------------------------------------------------------------
   359                          changebyte:
   360   0001a9 2af1ff          		ld	HL, (VARS + addr)
   361   0001ac 7e              		ld	a, (HL)
   362   0001ad cdfb04          		call	printhex
   363   0001b0 0e3a            		ld	c, ':'
   364   0001b2 cdc002          		call	conout
   365   0001b5 cd7502          		call	gethexbyte
   366   0001b8 77              		ld	(HL), a
   367   0001b9 c9              		ret
   368                          
   369                          
   370                          ;--------------------------------------------------------------
   371                          ; read new address from conin
   372                          ;--------------------------------------------------------------
   373                          newaddress:
   374   0001ba 219b04          		ld	HL, addrtext
   375   0001bd cda902          		call	printstr
   376   0001c0 cd7502          		call	gethexbyte
   377   0001c3 32f2ff          		ld	(VARS + addr + 1), a
   378   0001c6 cd7502          		call	gethexbyte
   379   0001c9 32f1ff          		ld	(VARS + addr), a
   380   0001cc c9              		ret
   381                          
   382                          
   383                          ;--------------------------------------------------------------
   384                          ; dump 256 bytes starting from (HL)
   385                          ;--------------------------------------------------------------
   386                          dumpmem:
   387   0001cd cd1b05          		call	newline
   388   0001d0 1610            		ld	d, 16
   389   0001d2 2af1ff          		ld	HL, (VARS + addr)
   390                          
   391                          dumpline:
   392   0001d5 0e3a            		ld	c, ':'
   393   0001d7 cd1b02          		call	printaddr
   394   0001da cd2305          		call	space
   395   0001dd e5              		push	HL
   396                          
   397   0001de 0610            		ld	b, 16
   398                          dumpmem1:
   399   0001e0 7e              		ld	a, (HL)
   400   0001e1 23              		inc	HL
   401   0001e2 cdfb04          		call	printhex
   402   0001e5 cd2305          		call	space
   403   0001e8 78              		ld	a, b
   404   0001e9 fe09            		cp	9
   405   0001eb 2003            		jr	NZ, dumpmem3
   406   0001ed cd2305          		call	space
   407                          dumpmem3:
   408   0001f0 10ee            		djnz	dumpmem1
   409                          
   410                          
   411   0001f2 0e7c            		ld	c, '|'
   412   0001f4 cdc002          		call	conout
   413   0001f7 0610            		ld	b, 16
   414   0001f9 e1              		pop	HL
   415                          
   416                          dumpmem5:
   417   0001fa 7e              		ld	a, (HL)
   418   0001fb 23              		inc	HL
   419   0001fc fe20            		cp	32
   420   0001fe 3804            		jr	C, dumpmem6
   421   000200 fe7e            		cp	126
   422   000202 3802            		jr	C, dumpmem4
   423                          dumpmem6:
   424   000204 3e2e            		ld	a, '.'
   425                          dumpmem4:
   426   000206 4f              		ld	c, a
   427   000207 cdc002          		call	conout
   428   00020a 10ee            		djnz	dumpmem5
   429                          
   430   00020c 0e7c            		ld	c, '|'
   431   00020e cdc002          		call	conout
   432                          
   433   000211 cd1b05          		call	newline
   434   000214 22f1ff          		ld	(VARS + addr), hl
   435   000217 15              		dec	d
   436   000218 20bb            		jr	NZ, dumpline
   437   00021a c9              		ret
   438                          
   439                          
   440                          ;--------------------------------------------------------------
   441                          ; print zero-terminated string via conout and character in C
   442                          ; uses A, E
   443                          ;--------------------------------------------------------------
   444                          printaddr:
   445   00021b 3af2ff          		ld	a, (VARS + addr + 1)
   446   00021e cdfb04          		call	printhex
   447   000221 3af1ff          		ld	a, (VARS + addr)
   448   000224 cdfb04          		call	printhex
   449   000227 c3c002          		jp	conout
   450                          
   451                          
   452                          ;--------------------------------------------------------------
   453                          ; download an Intel-Hex file
   454                          ; uses A, B, HL, E
   455                          ;--------------------------------------------------------------
   456   00022a af              download:	xor	a
   457   00022b 32f3ff          		ld	(VARS + echo), a	;echo off
   458   00022e 32f0ff          		ld	(VARS + sum), a		;sum = 0
   459   000231 218004          		ld	HL, downtext		;print "download..."
   460   000234 cda902          		call	printstr
   461                          download2:
   462   000237 cdb702          		call	conin			;wait for ':'
   463   00023a fe3a            		cp	a, ':'
   464   00023c 20f9            		jr	NZ, download2
   465                          
   466   00023e cd7502          		call	gethexbyte		;# of bytes to read
   467   000241 47              		ld	b, a			;in b
   468   000242 cd7502          		call	gethexbyte		;address high
   469   000245 67              		ld	h, a
   470   000246 cd7502          		call	gethexbyte		;address low
   471   000249 6f              		ld	l, a
   472   00024a cd7502          		call	gethexbyte		;record-type
   473   00024d b7              		or	a
   474   00024e 2012            		jr	NZ, downend
   475                          
   476                          download1:
   477   000250 cd7502          		call	gethexbyte		;get byte to store
   478                          
   479   000253 77              		ld	(HL), a			;store
   480   000254 23              		inc	HL			;increment address
   481   000255 10f9            		djnz	download1		;loop
   482                          
   483   000257 cd7502          		call	gethexbyte
   484   00025a 3af0ff          		ld	a, (VARS + sum)
   485   00025d b7              		or	a
   486   00025e 2010            		jr	NZ, downerror
   487                          
   488   000260 18d5            		jr	download2
   489                          
   490                          downend:
   491   000262 cd7502          		call	gethexbyte
   492   000265 219004          		ld	HL, downendtext
   493                          downend1:
   494   000268 cda902          		call	printstr
   495   00026b dd360301        		ld	(IX + echo), 1	;echo on
   496   00026f c9              		ret
   497                          
   498                          downerror:
   499   000270 21a404          		ld	HL, errortext
   500   000273 18f3            		jr	downend1
   501                          
   502                          
   503                          ;--------------------------------------------------------------
   504                          ; gethexbyte
   505                          ; returns 00-FF in A
   506                          ; uses E
   507                          ;--------------------------------------------------------------
   508                          gethexbyte:
   509   000275 d5              		push	DE
   510   000276 cd8c02          		call	getnibble
   511   000279 07              		rlca
   512   00027a 07              		rlca
   513   00027b 07              		rlca
   514   00027c 07              		rlca
   515   00027d 5f              		ld	e, a
   516   00027e cd8c02          		call	getnibble
   517   000281 b3              		or	e
   518   000282 5f              		ld	e, a
   519   000283 dd8600          		add	a, (IX + sum)
   520   000286 32f0ff          		ld	(VARS + sum), a
   521   000289 7b              		ld	a, e
   522   00028a d1              		pop	DE
   523   00028b c9              		ret
   524                          
   525                          
   526                          ;--------------------------------------------------------------
   527                          ; calls conin
   528                          ; returns 0-F in A
   529                          ;--------------------------------------------------------------
   530                          getnibble:
   531   00028c cdb702          		call	conin
   532   00028f f5              		push	AF
   533   000290 3af3ff          		ld	a, (VARS + echo)
   534   000293 b7              		or	a
   535   000294 2808            		jr	Z, getnibble2
   536   000296 f1              		pop	AF
   537   000297 f5              		push	AF
   538   000298 c5              		push	BC
   539   000299 4f              		ld	c, a
   540   00029a cdc002          		call	conout
   541   00029d c1              		pop	BC
   542                          getnibble2:
   543   00029e f1              		pop	AF
   544   00029f d630            		sub	'0'
   545   0002a1 fe0a            		cp	10		; < 10 ?
   546   0002a3 d8              		ret	C		; yes, return
   547   0002a4 e6df            		and	11011111b	; make uppercase
   548   0002a6 d607            		sub	7
   549   0002a8 c9              		ret
   550                          
   551                          
   552                          ;--------------------------------------------------------------
   553                          ; print text in (HL) uses
   554                          ; A
   555                          ;--------------------------------------------------------------
   556                          printstr:
   557   0002a9 c5              		push	BC
   558                          printstr2:
   559   0002aa 7e              		ld	a, (HL)
   560   0002ab 23              		inc	HL
   561   0002ac b7              		or	a
   562   0002ad 2806            		jr	Z, printstr1
   563   0002af 4f              		ld	c, a
   564   0002b0 cdc002          		call	conout
   565   0002b3 18f5            		jr	printstr2
   566                          printstr1:
   567   0002b5 c1              		pop	BC
   568   0002b6 c9              		ret
   569                          
   570                          ;--------------------------------------------------------------
   571                          ; get a character in A from rs232 (1)
   572                          ;
   573                          ;--------------------------------------------------------------
   574                          chrin:
   575   0002b7 db01            		in	a, (STATA)
   576   0002b9 e601            		and	a, 1
   577   0002bb 28fa            		jr	Z, chrin
   578   0002bd db03            		in	a, (RECA)
   579   0002bf c9              		ret
   580                          
   581                          ;--------------------------------------------------------------
   582                          ; output a character in A over rs232 (1)
   583                          ;
   584                          ;--------------------------------------------------------------
   585                          chrout:
   586   0002c0 f5              		push	AF
   587   0002c1 db01            chrout1:	in	a, (STATA)
   588   0002c3 e604            		and	a, 4
   589   0002c5 28fa            		jr	Z, chrout1
   590   0002c7 79              		ld	a, c
   591   0002c8 d303            		out	(TRANSA), a
   592   0002ca f1              		pop	AF
   593   0002cb c9              		ret
   594                          
   595                          ;--------------------------------------------------------------
   596                          ; get a character in A from rs232 (2)
   597                          ;
   598                          ;--------------------------------------------------------------
   599                          serintime:
   600   0002cc 010000          		ld	BC, 0
   601   0002cf db09            serintime2:	in	a, (STATB)
   602   0002d1 e601            		and	a, 1
   603   0002d3 2007            		jr	NZ, serintime1		;byte received?
   604   0002d5 10f8            		djnz	b, serintime2		;no, decrement b and try again
   605   0002d7 0d              		dec	c
   606   0002d8 20f5            		jr	NZ, serintime2
   607   0002da 3f              		ccf				;set carry ('and' clears carry)
   608   0002db c9              		ret
   609   0002dc db0b            serintime1:	in	a, (RECB)
   610   0002de c9              		ret
   611                          
   612                          ;--------------------------------------------------------------
   613                          ; get a character in A from rs232 (2)
   614                          ;
   615                          ;--------------------------------------------------------------
   616                          serin:
   617   0002df db09            		in	a, (STATB)
   618   0002e1 e601            		and	a, 1
   619   0002e3 28fa            		jr	Z, serin
   620   0002e5 db0b            		in	a, (RECB)
   621   0002e7 c9              		ret
   622                          
   623                          ;--------------------------------------------------------------
   624                          ; output a character in A over rs232 (2)
   625                          ;
   626                          ;--------------------------------------------------------------
   627                          serout:
   628   0002e8 f5              		push	AF
   629   0002e9 db09            serout1:	in	a, (STATB)
   630   0002eb e604            		and	a, 4
   631   0002ed 28fa            		jr	Z, serout1
   632   0002ef f1              		pop	AF
   633   0002f0 d30b            		out	(TRANSB), a
   634   0002f2 c9              		ret
   635                          
   636                          menukey:
   637   0002f3 0c              		DB	12
   638   0002f4 3f43444546474c4d		DB	"?CDEFGLMNOPT"
                4e4f5054        
   639                          
   640   000300 2501            menutab:	DW	questionmark
   641   000302 a901            		DW	changebyte
   642   000304 2a02            		DW	download
   643   000306 df00            		DW	closedisk
   644   000308 4501            		DW	fillmem
   645   00030a 2901            		DW	goto
   646   00030c 2d01            		DW	disass
   647   00030e cd01            		DW	dumpmem
   648   000310 ba01            		DW	newaddress
   649   000312 ba00            		DW	opendisk
   650   000314 2201            		DW	cpm
   651   000316 7a01            		DW	transfer
   652                          ;		DW	exit
   653                          
   654                          menutext:
   655   000318 201b5b6d0d      		DB	32, 27, "[m", CR
   656   00031d 2a2a2a2a2a2a2a2a		DB	"*************************************************", CR
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a0d            
   657   00034f 2a2a2a20205a3830		DB	"***  Z80 Mini-Monitor  (c) '22  by ", 27, "[1mR. Scholz", 27,"[m  ***", CR
                204d696e692d4d6f
                6e69746f72202028
                6329202732322020
                6279201b5b316d52
                2e205363686f6c7a
                1b5b6d20202a2a2a
                0d              
   658   000388 2a2a2a2a2a2a2a2a		DB	"*************************************************", CR
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a0d            
   659   0003ba 3f202d2054686973		DB	"? - This help", CR
                2068656c700d    
   660   0003c8 43202d204368616e		DB	"C - Change byte", CR
                676520627974650d
   661   0003d8 44202d20446f776e		DB	"D - Download Intel Hex file", CR
                6c6f616420496e74
                656c204865782066
                696c650d        
   662   0003f4 45202d20436c6f73		DB	"E - Close Disk", CR
                65204469736b0d  
   663   000403 46202d2046696c6c		DB	"F - Fill memory", CR
                206d656d6f72790d
   664   000413 47202d20476f746f		DB	"G - Goto address", CR
                2061646472657373
                0d              
   665   000424 4c202d2044697361		DB	"L - Disassemble", CR
                7373656d626c650d
   666   000434 4d202d204d656d6f		DB	"M - Memory dump", CR
                72792064756d700d
   667   000444 4e202d204e657720		DB	"N - New address", CR
                616464726573730d
   668   000454 4f202d204f70656e		DB	"O - Open Disk", CR
                204469736b0d    
   669   000462 50202d2043502f4d		DB	"P - CP/M", CR
                0d              
   670   00046b 54202d205472616e		DB	"T - Transfer memory", CR
                73666572206d656d
                6f72790d        
   671                          ;		DB	"X - eXit", CR
   672   00047f 00              		DB	0
   673                          
   674   000480 646f776e6c6f6164downtext:	DB	"downloading...", CR, 0
                696e672e2e2e0d00
   675   000490 66696e6973686564downendtext:	DB	"finished.", CR, 0
                2e0d00          
   676   00049b 616464726573733aaddrtext:	DB	"address:", 0
                00              
   677   0004a4 6572726f722100  errortext:	DB	"error!", 0
   678   0004ab 7472616e73666572transtext:	DB	"transfer from:", 0
                2066726f6d3a00  
   679   0004ba 206c656e3a00    lentext:	DB	" len:", 0
   680   0004c0 20746f3a00      totext:		DB	" to:", 0
   681   0004c5 66696c6c2066726ffilltext:	DB	"fill from:", 0
                6d3a00          
   682   0004d0 20776974683a00  withtext:	DB	" with:", 0
   683   0004d7 656e746572206469disktext:	DB	"enter disk number (0-9):",0
                736b206e756d6265
                722028302d39293a
                00              
   684   0004f0 0d66696c656e616dfiletext:	DB	CR, "filename:",0
                653a00          
   685                          
   686                          ;--------------------------------------------------------------
   687                          ; prints byte in A in hexadecimal format
   688                          ;--------------------------------------------------------------
   689                          printhex:
   690   0004fb f5              		push    AF
   691   0004fc f5              		push    AF
   692   0004fd 1f              		rra
   693   0004fe 1f              		rra
   694   0004ff 1f              		rra
   695   000500 1f              		rra
   696   000501 cd0a05          		call    printnib
   697   000504 f1              		pop     AF
   698   000505 cd0a05          		call    printnib
   699   000508 f1              		pop     AF
   700   000509 c9              		ret
   701                          printnib:
   702   00050a e60f            		and     0fh
   703   00050c fe0a            		cp      0ah
   704   00050e 3802            		jr      C, printnib1
   705   000510 c607            		add     a, 07h
   706                          printnib1:
   707   000512 c630            		add     a, '0'
   708                          print:
   709   000514 c5              		push    BC
   710   000515 4f              		ld      c, a
   711   000516 cdc002          		call    conout
   712   000519 c1              		pop     BC
   713   00051a c9              		ret
   714                          
   715                          newline:
   716   00051b c5              		push    BC
   717   00051c 0e0d            		ld      c, CR
   718   00051e cdc002          		call    conout
   719   000521 c1              		pop     BC
   720   000522 c9              		ret
   721                          
   722                          space:
   723   000523 c5              		push    BC
   724   000524 0e20            		ld      c, ' '
   725   000526 cdc002          		call    conout
   726   000529 c1              		pop     BC
   727   00052a c9              		ret
   728                          
   729                          getupper:
   730   00052b cdb702          		call	conin
   731   00052e fe61            		cp	'a'
   732   000530 d8              		ret	C
   733   000531 d620            		sub	32
   734   000533 c9              		ret
   735                          
   736                          conout:		equ	chrout
   737                          conin:		equ	chrin
   738                          
   739                          
   740                          		include "disz80.asm"
disz80.asm:
     1                          
     2                          
     3                          ;	SECTION	code_clib
     4                          ;	PUBLIC	disz80
     5                          ;	PUBLIC	_disz80
     6                          ;	EXTERN	fputc_cons
     7                          
     8                          ;fputc_cons	equ	conout
     9                          
    10                          ;  This code is been found in a ZX Spectrum tool called UTILITY3 v1.3
    11                          
    12                          
    13                          ;.disz80
    14                          ;._disz80
    15                          ;	pop	hl
    16                          ;	pop	bc
    17                          ;	pop	de
    18                          ;	push	de
    19                          ;	push	bc
    20                          ;	push	hl
    21                          ;	push	ix	;save callers ix
    22                          ;
    23                          ;	ld	a,d	;Supplying -1 as the address means we disassemble the following opcode
    24                          ;	and	e
    25                          ;	inc	a
    26                          ;	jr	nz,dizloop
    27                          ;	ld	hl,2
    28                          ;	add	hl,sp
    29                          ;	ld	e,(hl)
    30                          ;	inc	hl
    31                          ;	ld	d,(hl)
    32                          ;
    33                          ;.dizloop
    34                          ;	push	bc
    35                          ;	call	DISASM
    36                          ;	pop	bc
    37                          ;	ld	a,13
    38                          ;	call	CHROP
    39                          ;	ld	a,10
    40                          ;	call	CHROP
    41                          ;	dec	bc
    42                          ;	ld	a,b
    43                          ;	or	c
    44                          ;	jr	nz,dizloop
    45                          ;	ld	h,d	;Address of next instruction
    46                          ;	ld	l,e
    47                          ;	pop	ix	;restore callers ix
    48                          ;	ret
    49                          
    50                          ; ====================
    51                          ; DIS-Z80 was published in the SUBSET column of Personal Computer World 1987.
    52                          ; The routine disassembles a single Z80 instruction at address DE.
    53                          ; It is required to be followed by a routine called CHROP that outputs a
    54                          ; single ASCII character.
    55                          ; It was originally developed for CP/M on an Amstrad CPC128.
    56                          
    57                          ; The original ORG was $0100. I have added $5000 to all addresses.
    58                          ; The stated aim was to write a Z80 disassembly routine in as short a space
    59                          ; as possible and, at just over 1K (1090 bytes), it is a rather incredible
    60                          ; program.
    61                          
    62                          ; The SUBSET editor David Barrow was able to trim only one byte from John
    63                          ; Kerr's compact code. I've forgotten where so there's a challenge.
    64                          ; ====================
    65                          
    66   000534 cd5b09          .DISASM	CALL 	ADRSP
    67   000537 010009                 	LD 	BC,$0900
    68   00053a 212020                 	LD 	HL,$2020
    69                          
    70   00053d e5              .BUFFER	PUSH 	HL
    71   00053e 10fd                   	DJNZ 	BUFFER
    72   000540 60                     	LD 	H,B
    73   000541 69                     	LD 	L,C
    74   000542 39                     	ADD 	HL,SP
    75                          
    76   000543 c5                     	PUSH 	BC
    77   000544 dde3                   	EX 	(SP),IX
    78   000546 c5                     	PUSH 	BC
    79   000547 c5                     	PUSH 	BC
    80   000548 dd39                   	ADD 	IX,SP
    81                          
    82   00054a e5                     	PUSH 	HL
    83   00054b 21c506                 	LD 	HL,GROUP3
    84                          
    85   00054e cd5009          .TRYNDX	CALL 	FETCH
    86                          
    87   000551 41                     	LD 	B,C
    88   000552 feed                   	CP 	$ED
    89   000554 280a                   	JR 	Z,CONFLG
    90                          
    91   000556 04                     	INC 	B
    92   000557 fedd                   	CP 	$DD
    93   000559 2805                   	JR 	Z,CONFLG
    94                          
    95   00055b 04                     	INC 	B
    96   00055c fefd                   	CP 	$FD
    97   00055e 2008                   	JR 	NZ,NOTNDX
    98                          
    99   000560 dd7001          .CONFLG	LD 	(IX+1),B
   100   000563 04                     	INC 	B
   101   000564 10e8                   	DJNZ 	TRYNDX
   102                          
   103   000566 182a                   	JR 	NXBYTE
   104                          
   105   000568 4f              .NOTNDX	LD 	C,A
   106   000569 dd7e01                 	LD 	A,(IX+1)
   107   00056c b7                     	OR 	A
   108   00056d 2818                   	JR 	Z,NODISP
   109                          
   110   00056f 79                     	LD 	A,C
   111   000570 fecb                   	CP 	$CB
   112   000572 280d                   	JR 	Z,GETDIS
   113                          
   114   000574 e644                   	AND 	$44
   115   000576 fe04                   	CP 	4
   116   000578 2807                   	JR 	Z,GETDIS
   117                          
   118   00057a 79                     	LD 	A,C
   119   00057b e6c0                   	AND 	$C0
   120   00057d fe40                   	CP 	$40
   121   00057f 2006                   	JR 	NZ,NODISP
   122                          
   123   000581 cd5009          .GETDIS	CALL 	FETCH
   124   000584 dd7702                 	LD 	(IX+2),A
   125                          
   126   000587 211d06          .NODISP	LD 	HL,GROUP1
   127   00058a 79                     	LD 	A,C
   128   00058b fecb                   	CP 	$CB
   129   00058d 2007                   	JR 	NZ,NEWMSK
   130                          
   131   00058f 210206                 	LD 	HL,GROUP2
   132                          
   133   000592 cd5009          .NXBYTE	CALL 	FETCH
   134   000595 4f                     	LD 	C,A
   135                          
   136   000596 7e              .NEWMSK	LD 	A,(HL)
   137   000597 b7                     	OR 	A
   138   000598 2816                   	JR 	Z,TABEND
   139                          
   140   00059a a1                     	AND 	C
   141   00059b 23                     	INC 	HL
   142                          
   143   00059c 46              .NEWMOD	LD 	B,(HL)
   144   00059d 23                     	INC 	HL
   145   00059e 04                     	INC 	B
   146   00059f 28f5                   	JR 	Z,NEWMSK
   147                          
   148   0005a1 be              .TRYMAT	CP 	(HL)
   149   0005a2 23                     	INC 	HL
   150   0005a3 2807                   	JR 	Z,GETNDX
   151                          
   152   0005a5 cb7e                   	BIT 	7,(HL)
   153   0005a7 23                     	INC 	HL
   154   0005a8 28f7                   	JR 	Z,TRYMAT
   155                          
   156   0005aa 18f0                   	JR 	NEWMOD
   157                          
   158   0005ac 7e              .GETNDX	LD 	A,(HL)
   159   0005ad e67f                   	AND 	$7F
   160   0005af 05                     	DEC 	B
   161                          
   162   0005b0 e1              .TABEND	POP 	HL
   163   0005b1 d5                     	PUSH 	DE
   164   0005b2 e5                     	PUSH 	HL
   165                          
   166   0005b3 eb                     	EX 	DE,HL
   167   0005b4 211b07                 	LD 	HL,MONICS
   168   0005b7 cd3b09                 	CALL 	XTRACT
   169                          
   170   0005ba e1                     	POP 	HL
   171   0005bb 110500                 	LD 	DE,5
   172   0005be 19                     	ADD 	HL,DE
   173   0005bf d1                     	POP 	DE
   174                          
   175   0005c0 78                     	LD 	A,B
   176   0005c1 e6f0                   	AND 	$F0
   177   0005c3 2813                   	JR 	Z,SECOND
   178                          
   179   0005c5 1f                     	RRA
   180   0005c6 1f                     	RRA
   181   0005c7 1f                     	RRA
   182   0005c8 1f                     	RRA
   183   0005c9 c5                     	PUSH 	BC
   184                          
   185   0005ca 47                     	LD 	B,A
   186   0005cb 79                     	LD 	A,C
   187   0005cc cdeb07                 	CALL 	OPRND1
   188                          
   189   0005cf c1                     	POP 	BC
   190   0005d0 78                     	LD 	A,B
   191   0005d1 e60f                   	AND 	$0F
   192   0005d3 280b                   	JR 	Z,OPDONE
   193                          
   194   0005d5 362c                   	LD 	(HL),44  		;,
   195   0005d7 23                     	INC 	HL
   196                          
   197   0005d8 78              .SECOND	LD 	A,B
   198   0005d9 e60f                   	AND 	$0F
   199                          
   200   0005db 47                     	LD 	B,A
   201   0005dc 79                     	LD 	A,C
   202   0005dd c4f107                 	CALL 	NZ,OPRND2
   203                          
   204   0005e0 3e03            .OPDONE	LD 	A,3
   205   0005e2 dd9600                 	SUB 	(IX+0)
   206                          
   207   0005e5 e1                     	POP 	HL
   208   0005e6 e1                     	POP 	HL
   209   0005e7 dde1                   	POP 	IX
   210                          
   211   0005e9 380c                   	JR 	C,OUTEXT
   212                          
   213   0005eb 3c                     	INC 	A
   214   0005ec 47                     	LD 	B,A
   215   0005ed 80                     	ADD 	A,B
   216   0005ee 80                     	ADD 	A,B
   217   0005ef 47                     	LD 	B,A
   218                          
   219   0005f0 3e20            .SPACES	LD 	A,$20
   220   0005f2 cd7709                 	CALL 	CHROP
   221   0005f5 10f9                   	DJNZ 	SPACES
   222                          
   223   0005f7 0612            .OUTEXT	LD 	B,18
   224                          
   225   0005f9 3b              .PUTOUT	DEC 	SP
   226   0005fa e1                     	POP 	HL
   227   0005fb 7c                     	LD 	A,H
   228   0005fc cd7709                 	CALL 	CHROP
   229   0005ff 10f8                   	DJNZ 	PUTOUT
   230                          
   231   000601 c9                     	RET
   232                          
   233                          ;***********************
   234                          
   235   000602 c03640          .GROUP2	defb 	$C0,$36,$40
   236   000605 04802dc0be      	defb 	$04,$80,$2D,$C0,$BE
   237   00060a fff8060033      	defb 	$FF,$F8,$06,$00,$33
   238   00060f 0838103518      	defb 	$08,$38,$10,$35,$18
   239   000614 3a203f2840      	defb 	$3A,$20,$3F,$28,$40
   240   000619 300038c1        	defb 	$30,$00,$38,$C1
   241                          
   242                          
   243   00061d ff0000          .GROUP1	defb 	$FF,$00,$00
   244   000620 2407320f37      	defb 	$24,$07,$32,$0F,$37
   245   000625 17311f3627      	defb 	$17,$31,$1F,$36,$27
   246   00062a 0d2f0b373d      	defb 	$0D,$2F,$0B,$37,$3D
   247   00062f 3f067614c9      	defb 	$3F,$06,$76,$14,$C9
   248   000634 30d912f30f      	defb 	$30,$D9,$12,$F3,$0F
   249   000639 fb9172c602      	defb 	$FB,$91,$72,$C6,$02
   250   00063e ce01debc02      	defb 	$CE,$01,$DE,$BC,$02
   251   000643 d642e603ee      	defb 	$D6,$42,$E6,$03,$EE
   252   000648 43f625fe8c      	defb 	$43,$F6,$25,$FE,$8C
   253   00064d 0408930110      	defb 	$04,$08,$93,$01,$10
   254   000652 10189daf22      	defb 	$10,$18,$9D,$AF,$22
   255   000657 a2fa2aa2a7      	defb 	$A2,$FA,$2A,$A2,$A7
   256   00065c 32a27a3aa2      	defb 	$32,$A2,$7A,$3A,$A2
   257   000661 03c31ccd85      	defb 	$03,$C3,$1C,$CD,$85
   258   000666 97d3aa79db      	defb 	$97,$D3,$AA,$79,$DB
   259   00066b 9b5fe3930e      	defb 	$9B,$5F,$E3,$93,$0E
   260   000670 e99c05eb93      	defb 	$E9,$9C,$05,$EB,$93
   261   000675 dff9a2ffc0      	defb 	$DF,$F9,$A2,$FF,$C0
   262   00067a b640a2fff8      	defb 	$B6,$40,$A2,$FF,$F8
   263   00067f 7680028801      	defb 	$76,$80,$02,$88,$01
   264   000684 98bc069042      	defb 	$98,$BC,$06,$90,$42
   265   000689 a003a843b0      	defb 	$A0,$03,$A8,$43,$B0
   266   00068e 25b88cffc7      	defb 	$25,$B8,$8C,$FF,$C7
   267   000693 0b0416058e      	defb 	$0B,$04,$16,$05,$8E
   268   000698 b206a220c0      	defb 	$B2,$06,$A2,$20,$C0
   269   00069d b023c21cc4      	defb 	$B0,$23,$C2,$1C,$C4
   270   0006a2 8510c7bbff      	defb 	$85,$10,$C7,$BB,$FF
   271   0006a7 cfd301a20d      	defb 	$CF,$D3,$01,$A2,$0D
   272   0006ac 03160b8efd      	defb 	$03,$16,$0B,$8E,$FD
   273   0006b1 098260c12b      	defb 	$09,$82,$60,$C1,$2B
   274   0006b6 c5acffe721      	defb 	$C5,$AC,$FF,$E7,$21
   275   0006bb 209dffefe7      	defb 	$20,$9D,$FF,$EF,$E7
   276   0006c0 02a27e0aa2      	defb 	$02,$A2,$7E,$0A,$A2
   277                          
   278                          
   279   0006c5 ff0044          .GROUP3	defb 	$FF,$00,$44
   280   0006c8 23452f4d2e      	defb 	$23,$45,$2F,$4D,$2E
   281   0006cd 4e0067396f      	defb 	$4E,$00,$67,$39,$6F
   282   0006d2 3470007100      	defb 	$34,$70,$00,$71,$00
   283   0006d7 a021a10aa2      	defb 	$A0,$21,$A1,$0A,$A2
   284   0006dc 1aa329a81f      	defb 	$1A,$A3,$29,$A8,$1F
   285   0006e1 a908aa18ab      	defb 	$A9,$08,$AA,$18,$AB
   286   0006e6 28b020b109      	defb 	$28,$B0,$20,$B1,$09
   287   0006eb b219b327b8      	defb 	$B2,$19,$B3,$27,$B8
   288   0006f0 1eb907ba17      	defb 	$1E,$B9,$07,$BA,$17
   289   0006f5 bba6ffc7b8      	defb 	$BB,$A6,$FF,$C7,$B8
   290   0006fa 409b8b41aa      	defb 	$40,$9B,$8B,$41,$AA
   291   0006ff ffcffd423c      	defb 	$FF,$CF,$FD,$42,$3C
   292   000704 4a81ad43a2      	defb 	$4A,$81,$AD,$43,$A2
   293   000709 da4ba2ffe7      	defb 	$DA,$4B,$A2,$FF,$E7
   294   00070e 404695fff7      	defb 	$40,$46,$95,$FF,$F7
   295   000713 c747a27c57      	defb 	$C7,$47,$A2,$7C,$57
   296   000718 a2ff00          	defb 	$A2,$FF,$00
   297                          
   298                          ;_______________
   299                          
   300   00071b bf              .MONICS	defb 	$BF
   301   00071c 4144c3          	defb 	'A','D','C'+$80   	; ADC
   302   00071f 4144c4          	defb 	'A','D','D'+$80   	; ADD
   303   000722 414ec4          	defb 	'A','N','D'+$80   	; AND
   304   000725 4249d4          	defb 	'B','I','T'+$80   	; BIT
   305   000728 43414ccc        	defb 	'C','A','L','L'+$80	; CALL
   306   00072c 4343c6          	defb 	'C','C','F'+$80   	; CCF
   307   00072f 435044d2        	defb 	'C','P','D','R'+$80	; CPDR
   308   000733 4350c4          	defb 	'C','P','D'+$80   	; CPD
   309   000736 435049d2        	defb 	'C','P','I','R'+$80	; CPIR
   310   00073a 4350c9          	defb 	'C','P','I'+$80   	; CPI
   311   00073d 4350cc          	defb 	'C','P','L'+$80   	; CPL
   312   000740 43d0            	defb 	'C','P'+$80      	; CP
   313   000742 4441c1          	defb 	'D','A','A'+$80   	; DAA
   314   000745 4445c3          	defb 	'D','E','C'+$80   	; DEC
   315   000748 44c9            	defb 	'D','I'+$80      	; DI
   316   00074a 444a4eda        	defb 	'D','J','N','Z'+$80	; DJNZ
   317   00074e 45c9            	defb 	'E','I'+$80      	; EI
   318   000750 4558d8          	defb 	'E','X','X'+$80   	; EXX
   319   000753 45d8            	defb 	'E','X'+$80      	; EX
   320   000755 48414cd4        	defb 	'H','A','L','T'+$80	; HALT
   321   000759 49cd            	defb 	'I','M'+$80      	; IM
   322   00075b 494ec3          	defb 	'I','N','C'+$80   	; INC
   323   00075e 494e44d2        	defb 	'I','N','D','R'+$80	; INDR
   324   000762 494ec4          	defb 	'I','N','D'+$80   	; IND
   325   000765 494e49d2        	defb 	'I','N','I','R'+$80	; INIR
   326   000769 494ec9          	defb 	'I','N','I'+$80   	; INI
   327   00076c 49ce            	defb 	'I','N'+$80      	; IN
   328   00076e 4ad0            	defb 	'J','P'+$80      	; JP
   329   000770 4ad2            	defb 	'J','R'+$80      	; JR
   330   000772 4c4444d2        	defb 	'L','D','D','R'+$80	; LDDR
   331   000776 4c44c4          	defb 	'L','D','D'+$80   	; LDD
   332   000779 4c4449d2        	defb 	'L','D','I','R'+$80	; LDIR
   333   00077d 4c44c9          	defb 	'L','D','I'+$80   	; LDI
   334   000780 4cc4            	defb 	'L','D'+$80      	; LD
   335   000782 4e45c7          	defb 	'N','E','G'+$80   	; NEG
   336   000785 4e4fd0          	defb 	'N','O','P'+$80   	; NOP
   337   000788 4fd2            	defb 	'O','R'+$80      	; OR
   338   00078a 4f5444d2        	defb 	'O','T','D','R'+$80	; OTDR
   339   00078e 4f5449d2        	defb 	'O','T','I','R'+$80	; OTIR
   340   000792 4f5554c4        	defb 	'O','U','T','D'+$80	; OUTD
   341   000796 4f5554c9        	defb 	'O','U','T','I'+$80	; OUTI
   342   00079a 4f55d4          	defb 	'O','U','T'+$80   	; OUT
   343   00079d 504fd0          	defb 	'P','O','P'+$80   	; POP
   344   0007a0 505553c8        	defb 	'P','U','S','H'+$80	; PUSH
   345   0007a4 5245d3          	defb 	'R','E','S'+$80   	; RES
   346   0007a7 524554c9        	defb 	'R','E','T','I'+$80	; RETI
   347   0007ab 524554ce        	defb 	'R','E','T','N'+$80	; RETN
   348   0007af 5245d4          	defb 	'R','E','T'+$80   	; RET
   349   0007b2 524cc1          	defb 	'R','L','A'+$80   	; RLA
   350   0007b5 524c43c1        	defb 	'R','L','C','A'+$80	; RLCA
   351   0007b9 524cc3          	defb 	'R','L','C'+$80   	; RLC
   352   0007bc 524cc4          	defb 	'R','L','D'+$80   	; RLD
   353   0007bf 52cc            	defb 	'R','L'+$80      	; RL
   354   0007c1 5252c1          	defb 	'R','R','A'+$80   	; RRA
   355   0007c4 525243c1        	defb 	'R','R','C','A'+$80	; RA
   356   0007c8 5252c3          	defb 	'R','R','C'+$80   	; RRC
   357   0007cb 5252c4          	defb 	'R','R','D'+$80   	; RRD
   358   0007ce 52d2            	defb 	'R','R'+$80      	; RR
   359   0007d0 5253d4          	defb 	'R','S','T'+$80   	; RST
   360   0007d3 5342c3          	defb 	'S','B','C'+$80   	; SBC
   361   0007d6 5343c6          	defb 	'S','C','F'+$80   	; SCF
   362   0007d9 5345d4          	defb 	'S','E','T'+$80   	; SET
   363   0007dc 534cc1          	defb 	'S','L','A'+$80   	; SLA
   364   0007df 5352c1          	defb 	'S','R','A'+$80   	; SRA
   365   0007e2 5352cc          	defb 	'S','R','L'+$80   	; SRL
   366   0007e5 5355c2          	defb 	'S','U','B'+$80   	; SUB
   367   0007e8 584fd2          	defb 	'X','O','R'+$80   	; XOR
   368                          
   369                          
   370                          
   371                          ;*****************
   372                          
   373   0007eb 1012            .OPRND1	DJNZ 	CONDIT
   374                          
   375   0007ed e638            .RSTADR	AND 	$38
   376   0007ef 182a                   	JR 	DA
   377                          
   378   0007f1 101d            .OPRND2	DJNZ 	DAT8
   379                          
   380   0007f3 cd5009          .RELADR	CALL 	FETCH
   381   0007f6 4f                     	LD 	C,A
   382   0007f7 17                     	RLA
   383   0007f8 9f                     	SBC 	A,A
   384   0007f9 47                     	LD 	B,A
   385   0007fa eb                     	EX 	DE,HL
   386   0007fb e5                     	PUSH 	HL
   387   0007fc 09                     	ADD 	HL,BC
   388   0007fd 182d                   	JR 	DHL
   389                          
   390   0007ff 1f              .CONDIT	RRA
   391   000800 1f                     	RRA
   392   000801 1f                     	RRA
   393   000802 1013                   	DJNZ 	BITNUM
   394                          
   395   000804 cb67                   	BIT 	4,A
   396   000806 2002                   	JR 	NZ,ABS
   397                          
   398   000808 e603                   	AND 	3
   399                          
   400   00080a e607            .ABS   	AND 	7
   401   00080c c614                   	ADD 	A,$14
   402   00080e 1836                   	JR 	PS1
   403                          
   404   000810 100d            .DAT8  	DJNZ 	DAT16
   405                          
   406   000812 cd5009          .D8    	CALL 	FETCH
   407   000815 1804                   	JR 	DA
   408                          
   409   000817 1027            .BITNUM	DJNZ 	INTMOD
   410   000819 e607                   	AND 	7
   411                          
   412   00081b 4f              .DA    	LD 	C,A
   413   00081c 97                     	SUB 	A
   414   00081d 1809                   	JR 	DAC
   415                          
   416   00081f 1038            .DAT16 	DJNZ 	EXAF
   417                          
   418   000821 cd5009          .D16   	CALL 	FETCH
   419   000824 4f                     	LD 	C,A
   420   000825 cd5009                 	CALL 	FETCH
   421                          
   422   000828 eb              .DAC   	EX 	DE,HL
   423   000829 e5                     	PUSH 	HL
   424   00082a 67                     	LD 	H,A
   425   00082b 69                     	LD 	L,C
   426                          
   427   00082c 0ef8            .DHL   	LD 	C,$F8
   428   00082e e5                     	PUSH 	HL
   429   00082f cd1b09                 	CALL 	CONVHL
   430   000832 e1                     	POP 	HL
   431   000833 010a00                 	LD 	BC,$000A
   432   000836 b7                     	OR 	A
   433   000837 ed42                   	SBC 	HL,BC
   434   000839 e1                     	POP 	HL
   435   00083a eb                     	EX 	DE,HL
   436   00083b d8                     	RET 	C
   437                          
   438   00083c 3648                   	LD 	(HL),'H'
   439   00083e 23                     	INC 	HL
   440   00083f c9                     	RET
   441                          
   442                          
   443   000840 1006            .INTMOD	DJNZ 	STKTOP
   444   000842 e603                   	AND 	3
   445   000844 c61c                   	ADD 	A,$1C
   446                          
   447   000846 1852            .PS1   	JR 	PS3
   448                          
   449   000848 0e13            .STKTOP	LD 	C,$13
   450   00084a 05                     	DEC 	B
   451   00084b 284c                   	JR 	Z,PS2
   452                          
   453   00084d 1042            .REG16P	DJNZ 	COMMON
   454   00084f 1f                     	RRA
   455   000850 e603                   	AND 	3
   456   000852 fe03                   	CP 	3
   457   000854 2068                   	JR 	NZ,RX
   458                          
   459   000856 3d                     	DEC 	A
   460   000857 1869                   	JR 	RNX
   461                          
   462   000859 0e0a            .EXAF  	LD 	C,$0A
   463   00085b 05                     	DEC 	B
   464   00085c 283b                   	JR 	Z,PS2
   465                          
   466   00085e 0c              .EXDE  	INC 	C
   467   00085f 05                     	DEC 	B
   468   000860 2837                   	JR 	Z,PS2
   469                          
   470   000862 102a            .REG8S 	DJNZ 	ACCUM
   471                          
   472   000864 e607            .R8    	AND 	7
   473   000866 fe06                   	CP 	6
   474   000868 2030                   	JR 	NZ,PS3
   475                          
   476   00086a 3628                   	LD 	(HL),'('
   477   00086c 23                     	INC 	HL
   478   00086d cdd208                 	CALL 	REGX
   479   000870 dd7e02                 	LD 	A,(IX+2)
   480   000873 b7                     	OR 	A
   481   000874 2858                   	JR 	Z,RP
   482                          
   483   000876 362b                   	LD 	(HL),43 		;+
   484   000878 07                     	RLCA
   485   000879 0f                     	RRCA
   486   00087a 3004                   	JR 	NC,POS
   487                          
   488   00087c 362d                   	LD 	(HL),45			;-
   489   00087e ed44                   	NEG
   490                          
   491   000880 23              .POS   	INC 	HL
   492   000881 eb                     	EX 	DE,HL
   493   000882 e5                     	PUSH 	HL
   494   000883 60                     	LD 	H,B
   495   000884 6f                     	LD 	L,A
   496   000885 0efb                   	LD 	C,$FB
   497   000887 cd1b09                 	CALL 	CONVHL
   498   00088a e1                     	POP 	HL
   499   00088b eb                     	EX 	DE,HL
   500   00088c 1840                   	JR 	RP
   501                          
   502   00088e 1f              .ACCUM 	RRA
   503   00088f 1f                     	RRA
   504   000890 1f                     	RRA
   505                          
   506   000891 0e07            .COMMON	LD 	C,7
   507   000893 05                     	DEC 	B
   508   000894 2803                   	JR 	Z,PS2
   509                          
   510   000896 0d              .PORTC 	DEC 	C
   511   000897 1003                   	DJNZ 	IDAT8
   512                          
   513   000899 79              .PS2   	LD 	A,C
   514   00089a 183b            .PS3   	JR 	PS4
   515                          
   516   00089c 1008            .IDAT8 	DJNZ 	IDAT16
   517   00089e 3628                   	LD 	(HL),'('
   518   0008a0 23                     	INC 	HL
   519   0008a1 cd1208                 	CALL 	D8
   520   0008a4 1828                   	JR 	RP
   521                          
   522   0008a6 1008            .IDAT16	DJNZ 	REG8
   523   0008a8 3628                   	LD 	(HL),'('
   524   0008aa 23                     	INC 	HL
   525   0008ab cd2108                 	CALL 	D16
   526   0008ae 181e                   	JR 	RP
   527                          
   528   0008b0 05              .REG8  	DEC 	B
   529   0008b1 28b1                   	JR 	Z,R8
   530                          
   531   0008b3 1004            .IPAREF 	DJNZ 	REG16
   532   0008b5 e609                   	AND 	9
   533   0008b7 181e                   	JR 	PS4
   534                          
   535   0008b9 1f              .REG16 	RRA
   536   0008ba 100a                   	DJNZ 	IREG16
   537                          
   538   0008bc e603            .R16   	AND 	3
   539   0008be fe02            .RX    	CP  	2
   540   0008c0 2810                   	JR 	Z,REGX
   541                          
   542   0008c2 c60c            .RNX   	ADD 	A,$0C
   543   0008c4 1811                   	JR 	PS4
   544                          
   545   0008c6 100a            .IREG16	DJNZ 	REGX
   546   0008c8 3628                   	LD 	(HL),'('
   547   0008ca 23                     	INC 	HL
   548   0008cb cdbc08                 	CALL 	R16
   549                          
   550   0008ce 3629            .RP    	LD 	(HL),')'
   551   0008d0 23                     	INC 	HL
   552   0008d1 c9                     	RET
   553                          
   554   0008d2 dd7e01          .REGX  	LD 	A,(IX+1)
   555   0008d5 c610                   	ADD 	A,$10
   556                          
   557   0008d7 eb              .PS4   	EX 	DE,HL
   558   0008d8 e5                     	PUSH 	HL
   559   0008d9 21e208                 	LD 	HL,RGSTRS
   560   0008dc cd3b09                 	CALL 	XTRACT
   561   0008df e1                     	POP 	HL
   562   0008e0 eb                     	EX 	DE,HL
   563   0008e1 c9                     	RET
   564                          
   565                          ;*************
   566                          
   567   0008e2 c2              .RGSTRS	defb 	'B'				+$80
   568   0008e3 c3              	defb 	'C'       			+$80
   569   0008e4 c4              	defb 	'D'       			+$80
   570   0008e5 c5              	defb 	'E'       			+$80
   571   0008e6 c8              	defb 	'H'       			+$80
   572   0008e7 cc              	defb 	'L'       			+$80
   573   0008e8 2843a9          	defb 	'(','C',')' 			+$80
   574   0008eb c1              	defb 	'A'       			+$80
   575   0008ec c9              	defb 	'I'       			+$80
   576   0008ed d2              	defb 	'R'       			+$80
   577   0008ee 41462c4146a7    	defb 	'A','F',',','A','F','\''		+$80
   578   0008f4 44452c48cc      	defb 	'D','E',',','H','L'    		+$80
   579   0008f9 42c3            	defb 	'B','C'             		+$80
   580   0008fb 44c5            	defb 	'D','E'             		+$80
   581   0008fd 41c6            	defb 	'A','F'             		+$80
   582   0008ff 53d0            	defb 	'S','P'             		+$80
   583   000901 48cc            	defb 	'H','L'             		+$80
   584   000903 49d8            	defb 	'I','X'             		+$80
   585   000905 49d9            	defb 	'I','Y'             		+$80
   586   000907 285350a9        	defb 	'(','S','P',')'       		+$80
   587   00090b 4eda            	defb 	'N','Z'             		+$80
   588   00090d da              	defb 	'Z'                		+$80
   589   00090e 4ec3            	defb 	'N','C'             		+$80
   590   000910 c3              	defb 	'C'                		+$80
   591   000911 50cf            	defb 	'P','O'             		+$80
   592   000913 50c5            	defb 	'P','E'             		+$80
   593   000915 d0              	defb 	'P'                		+$80
   594   000916 cd              	defb 	'M'                		+$80
   595   000917 b0              	defb 	'0'    				+$80
   596   000918 bf              	defb 	'?'    				+$80
   597   000919 b1              	defb 	'1'    				+$80
   598   00091a b2              	defb 	'2'    				+$80
   599                          
   600                          ;********************
   601                          
   602   00091b 97              .CONVHL	SUB 	A
   603                          
   604   00091c f5              .CVHL1 	PUSH 	AF
   605   00091d 97                     	SUB 	A
   606   00091e 0610                   	LD 	B,16
   607                          
   608   000920 81              .CVHL2 	ADD 	A,C
   609   000921 3801                   	JR 	C,CVHL3
   610   000923 91                     	SUB 	C
   611                          
   612   000924 ed6a            .CVHL3 	ADC 	HL,HL
   613   000926 17                     	RLA
   614   000927 10f7                   	DJNZ 	CVHL2
   615                          
   616   000929 20f1                   	JR 	NZ,CVHL1
   617                          
   618   00092b fe0a                   	CP 	10
   619   00092d 04                     	INC 	B
   620   00092e 30ec                   	JR 	NC,CVHL1
   621                          
   622   000930 fe0a            .CVHL4 	CP 	10
   623   000932 de69                   	SBC 	A,$69
   624   000934 27                     	DAA
   625   000935 12                     	LD 	(DE),A
   626   000936 13                     	INC 	DE
   627   000937 f1                     	POP 	AF
   628   000938 20f6                   	JR 	NZ,CVHL4
   629                          
   630   00093a c9                     	RET
   631                          
   632                          ;****************
   633                          
   634   00093b b7              .XTRACT	OR 	A
   635   00093c 2808                   	JR 	Z,COPY
   636                          
   637   00093e cb7e            .SKIP  	BIT 	7,(HL)
   638   000940 23                     	INC 	HL
   639   000941 28fb                   	JR 	Z,SKIP
   640                          
   641   000943 3d                     	DEC 	A
   642   000944 20f8                   	JR 	NZ,SKIP
   643                          
   644   000946 7e              .COPY  	LD 	A,(HL)
   645   000947 07                     	RLCA
   646   000948 cb3f                   	SRL 	A
   647   00094a 12                     	LD 	(DE),A
   648                          
   649   00094b 13                     	INC 	DE
   650   00094c 23                     	INC 	HL
   651   00094d 30f7                   	JR 	NC,COPY
   652                          
   653   00094f c9                     	RET
   654                          
   655                          ;*******************
   656                          
   657   000950 1a              .FETCH 	LD 	A,(DE)
   658   000951 13                     	INC 	DE
   659   000952 dd3400                 	INC 	(IX+0)
   660   000955 f5                     	PUSH 	AF
   661   000956 cd6009                 	CALL 	BYTSP
   662   000959 f1                     	POP 	AF
   663   00095a c9                     	RET
   664                          
   665   00095b 7a              .ADRSP 	LD 	A,D
   666   00095c cd6709                 	CALL 	BYTOP
   667   00095f 7b                     	LD 	A,E
   668                          
   669   000960 cd6709          .BYTSP 	CALL 	BYTOP
   670   000963 3e20                   	LD 	A,$20
   671   000965 1810                   	JR 	CHROP
   672                          
   673   000967 f5              .BYTOP 	PUSH 	AF
   674   000968 1f                     	RRA
   675   000969 1f                     	RRA
   676   00096a 1f                     	RRA
   677   00096b 1f                     	RRA
   678   00096c cd7009                 	CALL 	HEXOP
   679   00096f f1                     	POP 	AF
   680                          
   681   000970 e60f            .HEXOP 	AND 	$0F
   682   000972 fe0a                   	CP 	10
   683   000974 de69                   	SBC 	A,$69
   684   000976 27                     	DAA
   685                          
   686                          ; -----------------------------------
   687                          ;
   688                          ; End of John Kerr's DIS-Z80 routine.
   689                          ;
   690                          ; The next routine outputs a character.
   691                          ;
   692                          ; -------------------------------------
   693                          
   694   000977 e5              .CHROP 	PUSH 	HL
   695   000978 d5                     	PUSH 	DE
   696   000979 c5                     	PUSH 	BC
   697                          
   698   00097a 4f              	ld	c, a
   699   00097b cdc002          	call	conout
   700                          
   701                          ;	ld	h,0
   702                          ;	ld	l,a
   703                          ;	push	hl		; parameter passing
   704                          ;      	call 	fputc_cons	; This calls the Z88DK "put char" function
   705                          ;	pop	hl
   706                          
   707   00097e c1                     	POP 	BC
   708   00097f d1                     	POP 	DE
   709   000980 e1                     	POP 	HL
   710                          
   711   000981 c9                     	RET
   712                          
   713                          
   714                          
z80.asm:
   741                          
