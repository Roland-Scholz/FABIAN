z80.asm:
     1                          		;FNAME "z80.bin"
     2                          
     3                          		include "mc68681.asm"
mc68681.asm:
     1                          ;--------------------------------------------------------------------------------
     2                          ; equates for MC68681 DUART
     3                          ;
     4                          ; see ./doc/scc68681.pdf
     5                          ;--------------------------------------------------------------------------------
     6                          MODEA		equ	0
     7                          STATA		equ	1
     8                          CLOCKA		equ	1
     9                          COMMA		equ	2
    10                          RECA		equ	3
    11                          TRANSA		equ	3
    12                          IPCHANGE	equ	4
    13                          AUXCTRL		equ	4
    14                          ISR		equ	5
    15                          IMR		equ	5
    16                          CNTMSB		equ	6
    17                          CNTLSB		equ	7
    18                          MODEB		equ	8
    19                          STATB		equ	9
    20                          CLOCKB		equ	9
    21                          COMMB		equ	10
    22                          RECB		equ	11
    23                          TRANSB		equ	11
    24                          IVR		equ	12
    25                          INPORT		equ	13
    26                          OPCTRL		equ	13
    27                          STRTCNT		equ	14
    28                          OPSET		equ	14
    29                          STOPCNT		equ	15
    30                          OPRES		equ	15
    31                          
z80.asm:
     4                          
     5                          CR:		equ	0dh
     6                          LF:		equ	0ah
     7                          C_XON		equ	17
     8                          C_XOFF		equ	19
     9                          
    10                          
    11                          VARS		equ	$FFF0			;stack grows downwards from this address
    12                          sum:		equ	0
    13                          addr:		equ	1
    14                          echo:		equ	3			;0 = off, 1 = on
    15                          xonxoff		equ	4			;0 = transmit, 1 = stop
    16                          
    17                          ;
    18                          ; must be loaded at 04000h in 27c256 EPROM!
    19                          ; BIOS at 05200h
    20                          ;
    21                          
    22                          		ORG     0000h
    23                          
    24   000000 f3              		di				;disable interrupts
    25   000001 ed56            		im	1			;interrup mode 1 = jp @ 038h
    26                          
    27   000003 3e80            		ld	a, 80h			;OP7 = HIGH, deactivate RAM
    28   000005 d30f            		out	(OPRES), a
    29                          
    30   000007 210000          		ld	HL, 0			;copy ROM to RAM from
    31   00000a 110000          		ld	DE, 0			;to
    32   00000d 010010          		ld	BC, 1000h		;length, 4KB
    33   000010 edb0            		ldir
    34                          
    35   000012 210012          		ld	HL, 01200h		;copy ROM to RAM from $1200
    36   000015 1100f2          		ld	DE, 0F200h		;to $F200 (CP/M Bios)
    37   000018 01000e          		ld	BC, 0e00h		;length, 14 pages
    38   00001b edb0            		ldir
    39                          
    40   00001d ed43f1ff        		ld	(VARS + addr), BC	;set addr to zero
    41                          
    42   000021 31f0ff          		ld	SP, VARS		;load stack-pointer
    43                          
    44   000024 dd21f0ff        		ld	IX, VARS
    45   000028 dd360301        		ld	(IX + echo), 1		;echo on
    46   00002c dd360400        		ld	(IX + xonxoff), 0	;xonxoff off
    47                          
    48   000030 3e4a            		ld	a, $4A			;RX+TX off and
    49   000032 d302            		out	(COMMA),a		;RESET ERROR
    50   000034 d30a            		out	(COMMB),a
    51                          
    52   000036 3e30            		ld	a, $30			;RESET TRANS
    53   000038 d302            		out	(COMMA),a
    54   00003a d30a            		out	(COMMB),a
    55                          
    56   00003c 3e20            		ld	a, $20			;RESET RECV
    57   00003e d302            		out	(COMMA),a
    58   000040 d30a            		out	(COMMB),a
    59                          
    60   000042 3e10            		ld	a, $10			;RESET to MODE REG1
    61   000044 d302            		out	(COMMA),a
    62   000046 d30a            		out	(COMMB),a
    63                          
    64   000048 3ee0            		ld	a, $E0			;BRG set 2 and timer = X1/CLK
    65   00004a d304            		out	(AUXCTRL),a
    66                          
    67   00004c 3e00            		ld	a, 0			;load timer with
    68   00004e d306            		out	(CNTMSB),a		;
    69   000050 3e02            		ld	a, 2			;57600 BAUD
    70   000052 d307            		out	(CNTLSB),a
    71                          
    72                          ;		in	a, (COMMA)		;Switch to test baudrates
    73                          
    74   000054 3e66            		ld	a, $66			;115200 BAUD
    75   000056 d301            		out	(CLOCKA),a
    76                          ;		ld	a, $66			;
    77   000058 d309            		out	(CLOCKB),a
    78                          
    79                          
    80   00005a 3e13            		ld	a, $13			;no RTS handshake + 8bits no parity
    81   00005c d300            		out	(MODEA),a
    82   00005e d308            		out	(MODEB),a
    83                          
    84   000060 3e07            		ld	a, $07			;no CTS handshake + 1 stopbit
    85   000062 d300            		out	(MODEA),a
    86   000064 d308            		out	(MODEB),a
    87                          
    88   000066 3e00            		ld	a, 0			;OP2-7 output
    89   000068 d30d            		out	(OPCTRL),a
    90                          
    91                          ;		ld	a, %11111111		;out = low; inverting!
    92                          ;		out	(OPSET),a
    93                          
    94                          ;		ld	a, %10101010
    95                          ;		out	(OPRES),a
    96                          
    97   00006a 3e00            		ld	a, 0			;IRQS AUS
    98   00006c d305            		out	(IMR),a
    99                          
   100   00006e 3e05            		ld	a, 5			;RX+TX AN
   101   000070 d302            		out	(COMMA),a
   102   000072 d30a            		out	(COMMB),a
   103                          
   104                          
   105   000074 3e80            		ld	a, 080h			;OP7 = LOW, activate RAM
   106   000076 d30e            		out	(OPSET), a
   107                          
   108                          
   109   000078 0e20            		ld	c, 32			;output space
   110   00007a 0600            		ld	b, 0			;test how long it takes to send
   111   00007c cde702          		call	conout
   112   00007f db01            wait:		in	a, (STATA)
   113   000081 04              		inc	b
   114   000082 e604            		and	4
   115   000084 28f9            		jr	Z, wait
   116                          
   117   000086 78              		ld	a, b			;if b < 10
   118   000087 fe0a            		cp	10			;test baudrate is already acrivated
   119   000089 3802            		jr	C, printmenu
   120   00008b db02            		in	a, (COMMA)		;switch to test baudrates
   121                          
   122                          ;--------------------------------------------------------------
   123                          ; print menu
   124                          ; print prompt
   125                          ; read upper key
   126                          ; check if key is found in menukey
   127                          ; read jmp-address and jump to subroutine
   128                          ;--------------------------------------------------------------
   129                          printmenu:
   130   00008d 214203          		ld      HL, menutext
   131   000090 cdc702          		call	printstr
   132                          
   133                          printprompt:
   134   000093 cd5405          		call	newline
   135   000096 0e3e            		ld	c, '>'
   136   000098 cd3902          		call	printaddr
   137                          
   138                          enterkey:
   139   00009b 0e00            		ld	c, 0			;offset in jumptable
   140   00009d 211a03          		ld	HL, menukey		;number auf keys
   141   0000a0 46              		ld	b, (HL)			;in b
   142   0000a1 23              		inc	HL
   143   0000a2 cd6905          		call	getupper		;read upper key
   144                          enterkey2:
   145   0000a5 be              		cp	(HL)			;key found?
   146   0000a6 2807            		jr	Z, enterkey1		;yes ==>
   147   0000a8 23              		inc	HL
   148   0000a9 0c              		inc	c
   149   0000aa 0c              		inc	c
   150   0000ab 10f8            		djnz	enterkey2		;decrease b and jump
   151   0000ad 18ec            		jr	enterkey
   152                          enterkey1:
   153   0000af 0600            		ld	b, 0			;add offset in BC
   154   0000b1 212803          		ld	HL, menutab		;to base
   155   0000b4 09              		add	HL, BC
   156   0000b5 019300          		ld	BC, printprompt		;push return-address
   157   0000b8 c5              		push	BC
   158   0000b9 5e              		ld	e, (HL)			;load jp address in DE
   159   0000ba 23              		inc	HL
   160   0000bb 56              		ld	d, (HL)
   161   0000bc eb              		ex	DE, HL			;in HL now
   162   0000bd e9              		jp	(HL)
   163                          
   164                          
   165   0000be db01            vt102:		in	a, (STATA)
   166   0000c0 e601            		and	a, 1
   167   0000c2 2805            		jr	Z, vt102a
   168   0000c4 db03            		in	a, (RECA)
   169   0000c6 cd0f03          		call	serout
   170                          vt102a:
   171   0000c9 db09            		in	a, (STATB)
   172   0000cb e601            		and	a, 1
   173   0000cd 28ef            		jr	Z, vt102
   174   0000cf db0b            		in	a, (RECB)
   175   0000d1 4f              		ld	c, a
   176   0000d2 cde702          		call	conout
   177   0000d5 c3be00          		jp	vt102
   178                          
   179                          ;--------------------------------------------------------------
   180                          ; open a diskfile (and close if already assigned)
   181                          ;--------------------------------------------------------------
   182                          opendisk:
   183   0000d8 cd1b01          		call	getDiskno
   184   0000db d8              		ret	C
   185                          
   186   0000dc 4f              		ld	c, a
   187   0000dd cde702          		call	conout
   188                          
   189   0000e0 d630            		sub	a, '0'
   190   0000e2 47              		ld	b, a
   191   0000e3 3e4f            		ld	a, 'O'
   192   0000e5 cd0f03          		call	serout
   193   0000e8 78              		ld	a, b
   194   0000e9 cd0f03          		call	serout
   195   0000ec cd0f03          		call	serout
   196   0000ef cd0f03          		call	serout
   197                          
   198   0000f2 cdf302          		call	serintime
   199   0000f5 d8              		ret	C
   200   0000f6 fe41            		cp	'A'
   201   0000f8 c0              		ret	NZ
   202                          
   203   0000f9 cd2b01          		call	getfilename
   204   0000fc c9              		ret
   205                          
   206                          ;--------------------------------------------------------------
   207                          ; close a diskfile
   208                          ;--------------------------------------------------------------
   209                          closedisk:
   210   0000fd cd1b01          		call	getDiskno
   211   000100 d8              		ret	C
   212                          
   213   000101 4f              		ld	c, a
   214   000102 cde702          		call	conout
   215                          
   216   000105 d630            		sub	a, '0'
   217   000107 47              		ld	b, a
   218   000108 3e43            		ld	a, 'C'
   219   00010a cd0f03          		call	serout
   220   00010d 78              		ld	a, b
   221   00010e cd0f03          		call	serout
   222   000111 cd0f03          		call	serout
   223   000114 cd0f03          		call	serout
   224                          
   225   000117 cdf302          		call	serintime
   226   00011a c9              		ret
   227                          
   228                          
   229                          ;--------------------------------------------------------------
   230                          ; enter disk number (0-9)
   231                          ;--------------------------------------------------------------
   232                          getDiskno:
   233   00011b 211005          		ld	HL, disktext
   234   00011e cdc702          		call	printstr
   235   000121 cdde02          		call	conin
   236   000124 fe30            		cp	'0'
   237   000126 d8              		ret	C
   238   000127 fe3a            		cp	'9'+1
   239   000129 3f              		ccf
   240   00012a c9              		ret
   241                          
   242                          ;--------------------------------------------------------------
   243                          ; enter text (filename) delimited by CR and send to SER:
   244                          ;--------------------------------------------------------------
   245   00012b 212905          getfilename:	ld	HL, filetext
   246   00012e cdc702          		call	printstr
   247                          getfilename1:
   248   000131 cdde02          		call	conin
   249   000134 cd0f03          		call	serout
   250   000137 4f              		ld	c, a
   251   000138 cde702          		call	conout
   252   00013b fe0d            		cp	13
   253   00013d 20f2            		jr	NZ, getfilename1
   254   00013f c9              		ret
   255                          
   256                          ;--------------------------------------------------------------
   257                          ; jump to CP/M
   258                          ;--------------------------------------------------------------
   259                          cpm:
   260   000140 c300f2          		jp	0F200h
   261                          ;--------------------------------------------------------------
   262                          ; jump to printmenu
   263                          ;--------------------------------------------------------------
   264                          questionmark:
   265   000143 c1              		pop	BC
   266   000144 c38d00          		jp	printmenu
   267                          
   268                          ;--------------------------------------------------------------
   269                          ; exit from monitor
   270                          ;--------------------------------------------------------------
   271                          ;exit:		pop	BC
   272                          ;		ld	SP, (VARS + oldstack)
   273                          ;		ret
   274                          
   275                          
   276                          ;--------------------------------------------------------------
   277                          ; jump to (addr)
   278                          ;--------------------------------------------------------------
   279   000147 2af1ff          goto:		ld	HL, (VARS + addr)
   280   00014a e9              		jp	(HL)
   281                          
   282                          
   283                          ;--------------------------------------------------------------
   284                          ; Disassemble 22 lines starting from (addr)
   285                          ;--------------------------------------------------------------
   286                          disass:
   287   00014b 0616            		ld	B, 22
   288   00014d ed5bf1ff        		ld	DE, (VARS + addr)
   289   000151 cd5405          		call	newline
   290                          disass1:
   291   000154 c5              		push	BC
   292   000155 cd7205          		call	DISASM
   293   000158 cd5405          		call	newline
   294   00015b c1              		pop	BC
   295   00015c 10f6            		djnz	disass1
   296                          
   297   00015e ed53f1ff        		ld	(VARS + addr), DE	;save new address
   298   000162 c9              		ret
   299                          
   300                          ;--------------------------------------------------------------
   301                          ;
   302                          ;--------------------------------------------------------------
   303                          fillmem:
   304   000163 21fe04          		ld	HL, filltext
   305   000166 cdc702          		call	printstr
   306                          
   307   000169 cd9302          		call	gethexbyte		;get from-addr
   308   00016c 67              		ld	h, a
   309   00016d cd9302          		call	gethexbyte
   310   000170 6f              		ld	l, a
   311   000171 e5              		push	HL
   312   000172 e5              		push	HL
   313                          
   314   000173 21f304          		ld	HL, lentext
   315   000176 cdc702          		call	printstr
   316   000179 cd9302          		call	gethexbyte		;get length
   317   00017c 47              		ld	b, a
   318   00017d cd9302          		call	gethexbyte
   319   000180 4f              		ld	c, a
   320                          
   321   000181 78              		ld	a, b			; if BC = 0
   322   000182 b1              		or	a, c
   323   000183 c8              		ret	Z			; return
   324   000184 0b              		dec	BC
   325                          
   326   000185 210905          		ld	HL, withtext
   327   000188 cdc702          		call	printstr
   328   00018b cd9302          		call	gethexbyte
   329                          
   330   00018e d1              		pop	DE			; DE = HL + 1
   331   00018f 13              		inc	DE
   332                          
   333   000190 e1              		pop	HL
   334   000191 77              		ld	(HL), a
   335                          
   336   000192 78              		ld	a, b
   337   000193 b1              		or	a, c
   338   000194 c8              		ret	Z
   339                          
   340   000195 edb0            		LDIR
   341                          
   342   000197 c9              		ret
   343                          
   344                          ;--------------------------------------------------------------
   345                          ;
   346                          ;--------------------------------------------------------------
   347                          transfer:
   348   000198 21e404          		ld	HL, transtext
   349   00019b cdc702          		call	printstr
   350                          
   351   00019e cd9302          		call	gethexbyte		;get from-addr
   352   0001a1 67              		ld	h, a
   353   0001a2 cd9302          		call	gethexbyte
   354   0001a5 6f              		ld	l, a
   355   0001a6 e5              		push	HL
   356                          
   357   0001a7 21f304          		ld	HL, lentext
   358   0001aa cdc702          		call	printstr
   359   0001ad cd9302          		call	gethexbyte		;get length
   360   0001b0 47              		ld	b, a
   361   0001b1 cd9302          		call	gethexbyte
   362   0001b4 4f              		ld	c, a
   363                          
   364   0001b5 21f904          		ld	HL, totext
   365   0001b8 cdc702          		call	printstr
   366   0001bb cd9302          		call	gethexbyte		;get dest-addr
   367   0001be 57              		ld	d, a
   368   0001bf cd9302          		call	gethexbyte
   369   0001c2 5f              		ld	e, a
   370                          
   371   0001c3 e1              		pop	HL
   372                          
   373   0001c4 edb0            		LDIR
   374                          
   375   0001c6 c9              		ret
   376                          
   377                          ;--------------------------------------------------------------
   378                          ; change a byte in (addr)
   379                          ;--------------------------------------------------------------
   380                          changebyte:
   381   0001c7 2af1ff          		ld	HL, (VARS + addr)
   382   0001ca 7e              		ld	a, (HL)
   383   0001cb cd3405          		call	printhex
   384   0001ce 0e3a            		ld	c, ':'
   385   0001d0 cde702          		call	conout
   386   0001d3 cd9302          		call	gethexbyte
   387   0001d6 77              		ld	(HL), a
   388   0001d7 c9              		ret
   389                          
   390                          
   391                          ;--------------------------------------------------------------
   392                          ; read new address from conin
   393                          ;--------------------------------------------------------------
   394                          newaddress:
   395   0001d8 21d404          		ld	HL, addrtext
   396   0001db cdc702          		call	printstr
   397   0001de cd9302          		call	gethexbyte
   398   0001e1 32f2ff          		ld	(VARS + addr + 1), a
   399   0001e4 cd9302          		call	gethexbyte
   400   0001e7 32f1ff          		ld	(VARS + addr), a
   401   0001ea c9              		ret
   402                          
   403                          
   404                          ;--------------------------------------------------------------
   405                          ; dump 256 bytes starting from (HL)
   406                          ;--------------------------------------------------------------
   407                          dumpmem:
   408   0001eb cd5405          		call	newline
   409   0001ee 1610            		ld	d, 16
   410   0001f0 2af1ff          		ld	HL, (VARS + addr)
   411                          
   412                          dumpline:
   413   0001f3 0e3a            		ld	c, ':'
   414   0001f5 cd3902          		call	printaddr
   415   0001f8 cd6105          		call	space
   416   0001fb e5              		push	HL
   417                          
   418   0001fc 0610            		ld	b, 16
   419                          dumpmem1:
   420   0001fe 7e              		ld	a, (HL)
   421   0001ff 23              		inc	HL
   422   000200 cd3405          		call	printhex
   423   000203 cd6105          		call	space
   424   000206 78              		ld	a, b
   425   000207 fe09            		cp	9
   426   000209 2003            		jr	NZ, dumpmem3
   427   00020b cd6105          		call	space
   428                          dumpmem3:
   429   00020e 10ee            		djnz	dumpmem1
   430                          
   431                          
   432   000210 0e7c            		ld	c, '|'
   433   000212 cde702          		call	conout
   434   000215 0610            		ld	b, 16
   435   000217 e1              		pop	HL
   436                          
   437                          dumpmem5:
   438   000218 7e              		ld	a, (HL)
   439   000219 23              		inc	HL
   440   00021a fe20            		cp	32
   441   00021c 3804            		jr	C, dumpmem6
   442   00021e fe7e            		cp	126
   443   000220 3802            		jr	C, dumpmem4
   444                          dumpmem6:
   445   000222 3e2e            		ld	a, '.'
   446                          dumpmem4:
   447   000224 4f              		ld	c, a
   448   000225 cde702          		call	conout
   449   000228 10ee            		djnz	dumpmem5
   450                          
   451   00022a 0e7c            		ld	c, '|'
   452   00022c cde702          		call	conout
   453                          
   454   00022f cd5405          		call	newline
   455   000232 22f1ff          		ld	(VARS + addr), hl
   456   000235 15              		dec	d
   457   000236 20bb            		jr	NZ, dumpline
   458   000238 c9              		ret
   459                          
   460                          
   461                          ;--------------------------------------------------------------
   462                          ; print zero-terminated string via conout and character in C
   463                          ; uses A, E
   464                          ;--------------------------------------------------------------
   465                          printaddr:
   466   000239 3af2ff          		ld	a, (VARS + addr + 1)
   467   00023c cd3405          		call	printhex
   468   00023f 3af1ff          		ld	a, (VARS + addr)
   469   000242 cd3405          		call	printhex
   470   000245 c3e702          		jp	conout
   471                          
   472                          
   473                          ;--------------------------------------------------------------
   474                          ; download an Intel-Hex file
   475                          ; uses A, B, HL, E
   476                          ;--------------------------------------------------------------
   477   000248 af              download:	xor	a
   478   000249 32f3ff          		ld	(VARS + echo), a	;echo off
   479   00024c 32f0ff          		ld	(VARS + sum), a		;sum = 0
   480   00024f 21b904          		ld	HL, downtext		;print "download..."
   481   000252 cdc702          		call	printstr
   482                          download2:
   483   000255 cdde02          		call	conin			;wait for ':'
   484   000258 fe3a            		cp	a, ':'
   485   00025a 20f9            		jr	NZ, download2
   486                          
   487   00025c cd9302          		call	gethexbyte		;# of bytes to read
   488   00025f 47              		ld	b, a			;in b
   489   000260 cd9302          		call	gethexbyte		;address high
   490   000263 67              		ld	h, a
   491   000264 cd9302          		call	gethexbyte		;address low
   492   000267 6f              		ld	l, a
   493   000268 cd9302          		call	gethexbyte		;record-type
   494   00026b b7              		or	a
   495   00026c 2012            		jr	NZ, downend
   496                          
   497                          download1:
   498   00026e cd9302          		call	gethexbyte		;get byte to store
   499                          
   500   000271 77              		ld	(HL), a			;store
   501   000272 23              		inc	HL			;increment address
   502   000273 10f9            		djnz	download1		;loop
   503                          
   504   000275 cd9302          		call	gethexbyte
   505   000278 3af0ff          		ld	a, (VARS + sum)
   506   00027b b7              		or	a
   507   00027c 2010            		jr	NZ, downerror
   508                          
   509   00027e 18d5            		jr	download2
   510                          
   511                          downend:
   512   000280 cd9302          		call	gethexbyte
   513   000283 21c904          		ld	HL, downendtext
   514                          downend1:
   515   000286 cdc702          		call	printstr
   516   000289 dd360301        		ld	(IX + echo), 1	;echo on
   517   00028d c9              		ret
   518                          
   519                          downerror:
   520   00028e 21dd04          		ld	HL, errortext
   521   000291 18f3            		jr	downend1
   522                          
   523                          
   524                          ;--------------------------------------------------------------
   525                          ; gethexbyte
   526                          ; returns 00-FF in A
   527                          ; uses E
   528                          ;--------------------------------------------------------------
   529                          gethexbyte:
   530   000293 d5              		push	DE
   531   000294 cdaa02          		call	getnibble
   532   000297 07              		rlca
   533   000298 07              		rlca
   534   000299 07              		rlca
   535   00029a 07              		rlca
   536   00029b 5f              		ld	e, a
   537   00029c cdaa02          		call	getnibble
   538   00029f b3              		or	e
   539   0002a0 5f              		ld	e, a
   540   0002a1 dd8600          		add	a, (IX + sum)
   541   0002a4 32f0ff          		ld	(VARS + sum), a
   542   0002a7 7b              		ld	a, e
   543   0002a8 d1              		pop	DE
   544   0002a9 c9              		ret
   545                          
   546                          
   547                          ;--------------------------------------------------------------
   548                          ; calls conin
   549                          ; returns 0-F in A
   550                          ;--------------------------------------------------------------
   551                          getnibble:
   552   0002aa cdde02          		call	conin
   553   0002ad f5              		push	AF
   554   0002ae 3af3ff          		ld	a, (VARS + echo)
   555   0002b1 b7              		or	a
   556   0002b2 2808            		jr	Z, getnibble2
   557   0002b4 f1              		pop	AF
   558   0002b5 f5              		push	AF
   559   0002b6 c5              		push	BC
   560   0002b7 4f              		ld	c, a
   561   0002b8 cde702          		call	conout
   562   0002bb c1              		pop	BC
   563                          getnibble2:
   564   0002bc f1              		pop	AF
   565   0002bd d630            		sub	'0'
   566   0002bf fe0a            		cp	10		; < 10 ?
   567   0002c1 d8              		ret	C		; yes, return
   568   0002c2 e6df            		and	11011111b	; make uppercase
   569   0002c4 d607            		sub	7
   570   0002c6 c9              		ret
   571                          
   572                          
   573                          ;--------------------------------------------------------------
   574                          ; print text in (HL) uses
   575                          ; A
   576                          ;--------------------------------------------------------------
   577                          printstr:
   578   0002c7 c5              		push	BC
   579                          printstr2:
   580   0002c8 7e              		ld	a, (HL)
   581   0002c9 23              		inc	HL
   582   0002ca b7              		or	a
   583   0002cb 280f            		jr	Z, printstr1
   584   0002cd 4f              		ld	c, a
   585   0002ce cde702          		call	conout
   586   0002d1 fe0d            		cp	CR
   587   0002d3 20f3            		jr	NZ, printstr2
   588   0002d5 0e0a            		ld	c, LF
   589   0002d7 cde702          		call	conout
   590   0002da 18ec            		jr	printstr2
   591                          printstr1:
   592   0002dc c1              		pop	BC
   593   0002dd c9              		ret
   594                          
   595                          ;--------------------------------------------------------------
   596                          ; get a character in A from rs232 (1)
   597                          ;
   598                          ;--------------------------------------------------------------
   599                          chrin:
   600   0002de db01            		in	a, (STATA)
   601   0002e0 e601            		and	a, 1
   602   0002e2 28fa            		jr	Z, chrin
   603   0002e4 db03            		in	a, (RECA)
   604   0002e6 c9              		ret
   605                          
   606                          ;chrin1:
   607                          ;		in	a, (STATB)
   608                          ;		and	a, 1
   609                          ;		jr	Z, chrin
   610                          ;		in	a, (RECB)
   611                          ;		ret
   612                          
   613                          ;--------------------------------------------------------------
   614                          ; output a character in C over rs232 (1)
   615                          ;
   616                          ;--------------------------------------------------------------
   617                          chrout:
   618   0002e7 f5              		push	AF
   619   0002e8 db01            chrout1:	in	a, (STATA)
   620   0002ea e604            		and	a, 4
   621   0002ec 28fa            		jr	Z, chrout1
   622   0002ee 79              		ld	a, c
   623   0002ef d303            		out	(TRANSA), a
   624   0002f1 f1              		pop	AF
   625   0002f2 c9              		ret
   626                          
   627                          ;--------------------------------------------------------------
   628                          ; get a character in A from rs232 (2)
   629                          ;
   630                          ;--------------------------------------------------------------
   631                          serintime:
   632   0002f3 010000          		ld	BC, 0
   633   0002f6 db09            serintime2:	in	a, (STATB)
   634   0002f8 e601            		and	a, 1
   635   0002fa 2007            		jr	NZ, serintime1		;byte received?
   636   0002fc 10f8            		djnz	b, serintime2		;no, decrement b and try again
   637   0002fe 0d              		dec	c
   638   0002ff 20f5            		jr	NZ, serintime2
   639   000301 3f              		ccf				;set carry ('and' clears carry)
   640   000302 c9              		ret
   641   000303 db0b            serintime1:	in	a, (RECB)
   642   000305 c9              		ret
   643                          
   644                          ;--------------------------------------------------------------
   645                          ; get a character in A from rs232 (2)
   646                          ;
   647                          ;--------------------------------------------------------------
   648                          serin:
   649   000306 db09            		in	a, (STATB)
   650   000308 e601            		and	a, 1
   651   00030a 28fa            		jr	Z, serin
   652   00030c db0b            		in	a, (RECB)
   653   00030e c9              		ret
   654                          
   655                          ;--------------------------------------------------------------
   656                          ; output a character in A over rs232 (1)
   657                          ;
   658                          ;--------------------------------------------------------------
   659                          serout:
   660   00030f f5              		push	AF
   661                          
   662                          ;		in	a, (STATB)
   663                          ;		and	a, 1
   664                          ;		jr	Z, serout1
   665                          ;		in	a, (RECB)
   666                          ;		cp	C_XOFF
   667                          ;		jr	NZ, serout1
   668                          ;
   669                          ;serout2:	in	a, (STATB)
   670                          ;		and	a, 1
   671                          ;		jr	Z, serout2
   672                          ;		in	a, (RECB)
   673                          ;		cp	C_XON
   674                          ;		jr	NZ, serout2
   675                          
   676   000310 db09            serout1:	in	a, (STATB)
   677   000312 e604            		and	a, 4
   678   000314 28fa            		jr	Z, serout1
   679   000316 f1              		pop	AF
   680   000317 d30b            		out	(TRANSB), a
   681   000319 c9              		ret
   682                          
   683                          menukey:
   684   00031a 0d              		DB	13
   685   00031b 3f43444546474c4d		DB	"?CDEFGLMNOPTV"
                4e4f505456      
   686                          
   687   000328 4301            menutab:	DW	questionmark
   688   00032a c701            		DW	changebyte
   689   00032c 4802            		DW	download
   690   00032e fd00            		DW	closedisk
   691   000330 6301            		DW	fillmem
   692   000332 4701            		DW	goto
   693   000334 4b01            		DW	disass
   694   000336 eb01            		DW	dumpmem
   695   000338 d801            		DW	newaddress
   696   00033a d800            		DW	opendisk
   697   00033c 4001            		DW	cpm
   698   00033e 9801            		DW	transfer
   699   000340 be00            		DW	vt102
   700                          ;		DW	exit
   701                          
   702                          menutext:
   703   000342 201b5b6d0d      		DB	32, 27, "[m", CR
   704   000347 2a2a2a2a2a2a2a2a		DB	"*************************************************", CR
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a0d            
   705   000379 2a2a2a20205a3830		DB	"***  Z80 Mini-Monitor  (c) '22  by ", 27, "[1mR. Scholz", 27,"[m  ***", CR
                204d696e692d4d6f
                6e69746f72202028
                6329202732322020
                6279201b5b316d52
                2e205363686f6c7a
                1b5b6d20202a2a2a
                0d              
   706   0003b2 2a2a2a2a2a2a2a2a		DB	"*************************************************", CR
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a2a2a2a2a2a2a2a
                2a0d            
   707   0003e4 3f202d2054686973		DB	"? - This help", CR
                2068656c700d    
   708   0003f2 43202d204368616e		DB	"C - Change byte", CR
                676520627974650d
   709   000402 44202d20446f776e		DB	"D - Download Intel Hex file", CR
                6c6f616420496e74
                656c204865782066
                696c650d        
   710   00041e 45202d20436c6f73		DB	"E - Close Disk", CR
                65204469736b0d  
   711   00042d 46202d2046696c6c		DB	"F - Fill memory", CR
                206d656d6f72790d
   712   00043d 47202d20476f746f		DB	"G - Goto address", CR
                2061646472657373
                0d              
   713   00044e 4c202d2044697361		DB	"L - Disassemble", CR
                7373656d626c650d
   714   00045e 4d202d204d656d6f		DB	"M - Memory dump", CR
                72792064756d700d
   715   00046e 4e202d204e657720		DB	"N - New address", CR
                616464726573730d
   716   00047e 4f202d204f70656e		DB	"O - Open Disk", CR
                204469736b0d    
   717   00048c 50202d2043502f4d		DB	"P - CP/M", CR
                0d              
   718   000495 54202d205472616e		DB	"T - Transfer memory", CR
                73666572206d656d
                6f72790d        
   719   0004a9 56202d2056543130		DB	"V - VT102 test", CR
                3220746573740d  
   720                          ;		DB	"X - eXit", CR
   721   0004b8 00              		DB	0
   722                          
   723   0004b9 646f776e6c6f6164downtext:	DB	"downloading...", CR, 0
                696e672e2e2e0d00
   724   0004c9 66696e6973686564downendtext:	DB	"finished.", CR, 0
                2e0d00          
   725   0004d4 616464726573733aaddrtext:	DB	"address:", 0
                00              
   726   0004dd 6572726f722100  errortext:	DB	"error!", 0
   727   0004e4 7472616e73666572transtext:	DB	"transfer from:", 0
                2066726f6d3a00  
   728   0004f3 206c656e3a00    lentext:	DB	" len:", 0
   729   0004f9 20746f3a00      totext:		DB	" to:", 0
   730   0004fe 66696c6c2066726ffilltext:	DB	"fill from:", 0
                6d3a00          
   731   000509 20776974683a00  withtext:	DB	" with:", 0
   732   000510 656e746572206469disktext:	DB	"enter disk number (0-9):",0
                736b206e756d6265
                722028302d39293a
                00              
   733   000529 0d66696c656e616dfiletext:	DB	CR, "filename:",0
                653a00          
   734                          
   735                          ;--------------------------------------------------------------
   736                          ; prints byte in A in hexadecimal format
   737                          ;--------------------------------------------------------------
   738                          printhex:
   739   000534 f5              		push    AF
   740   000535 f5              		push    AF
   741   000536 1f              		rra
   742   000537 1f              		rra
   743   000538 1f              		rra
   744   000539 1f              		rra
   745   00053a cd4305          		call    printnib
   746   00053d f1              		pop     AF
   747   00053e cd4305          		call    printnib
   748   000541 f1              		pop     AF
   749   000542 c9              		ret
   750                          printnib:
   751   000543 e60f            		and     0fh
   752   000545 fe0a            		cp      0ah
   753   000547 3802            		jr      C, printnib1
   754   000549 c607            		add     a, 07h
   755                          printnib1:
   756   00054b c630            		add     a, '0'
   757                          print:
   758   00054d c5              		push    BC
   759   00054e 4f              		ld      c, a
   760   00054f cde702          		call    conout
   761   000552 c1              		pop     BC
   762   000553 c9              		ret
   763                          
   764                          newline:
   765   000554 c5              		push    BC
   766   000555 0e0d            		ld      c, CR
   767   000557 cde702          		call    conout
   768   00055a 0e0a            		ld      c, LF
   769   00055c cde702          		call    conout
   770   00055f c1              		pop     BC
   771   000560 c9              		ret
   772                          
   773                          space:
   774   000561 c5              		push    BC
   775   000562 0e20            		ld      c, ' '
   776   000564 cde702          		call    conout
   777   000567 c1              		pop     BC
   778   000568 c9              		ret
   779                          
   780                          getupper:
   781   000569 cdde02          		call	conin
   782   00056c fe61            		cp	'a'
   783   00056e d8              		ret	C
   784   00056f d620            		sub	32
   785   000571 c9              		ret
   786                          
   787                          conout:		equ	chrout
   788                          conin:		equ	chrin
   789                          
   790                          
   791                          		include "disz80.asm"
disz80.asm:
     1                          
     2                          
     3                          ;	SECTION	code_clib
     4                          ;	PUBLIC	disz80
     5                          ;	PUBLIC	_disz80
     6                          ;	EXTERN	fputc_cons
     7                          
     8                          ;fputc_cons	equ	conout
     9                          
    10                          ;  This code is been found in a ZX Spectrum tool called UTILITY3 v1.3
    11                          
    12                          
    13                          ;.disz80
    14                          ;._disz80
    15                          ;	pop	hl
    16                          ;	pop	bc
    17                          ;	pop	de
    18                          ;	push	de
    19                          ;	push	bc
    20                          ;	push	hl
    21                          ;	push	ix	;save callers ix
    22                          ;
    23                          ;	ld	a,d	;Supplying -1 as the address means we disassemble the following opcode
    24                          ;	and	e
    25                          ;	inc	a
    26                          ;	jr	nz,dizloop
    27                          ;	ld	hl,2
    28                          ;	add	hl,sp
    29                          ;	ld	e,(hl)
    30                          ;	inc	hl
    31                          ;	ld	d,(hl)
    32                          ;
    33                          ;.dizloop
    34                          ;	push	bc
    35                          ;	call	DISASM
    36                          ;	pop	bc
    37                          ;	ld	a,13
    38                          ;	call	CHROP
    39                          ;	ld	a,10
    40                          ;	call	CHROP
    41                          ;	dec	bc
    42                          ;	ld	a,b
    43                          ;	or	c
    44                          ;	jr	nz,dizloop
    45                          ;	ld	h,d	;Address of next instruction
    46                          ;	ld	l,e
    47                          ;	pop	ix	;restore callers ix
    48                          ;	ret
    49                          
    50                          ; ====================
    51                          ; DIS-Z80 was published in the SUBSET column of Personal Computer World 1987.
    52                          ; The routine disassembles a single Z80 instruction at address DE.
    53                          ; It is required to be followed by a routine called CHROP that outputs a
    54                          ; single ASCII character.
    55                          ; It was originally developed for CP/M on an Amstrad CPC128.
    56                          
    57                          ; The original ORG was $0100. I have added $5000 to all addresses.
    58                          ; The stated aim was to write a Z80 disassembly routine in as short a space
    59                          ; as possible and, at just over 1K (1090 bytes), it is a rather incredible
    60                          ; program.
    61                          
    62                          ; The SUBSET editor David Barrow was able to trim only one byte from John
    63                          ; Kerr's compact code. I've forgotten where so there's a challenge.
    64                          ; ====================
    65                          
    66   000572 cd9909          .DISASM	CALL 	ADRSP
    67   000575 010009                 	LD 	BC,$0900
    68   000578 212020                 	LD 	HL,$2020
    69                          
    70   00057b e5              .BUFFER	PUSH 	HL
    71   00057c 10fd                   	DJNZ 	BUFFER
    72   00057e 60                     	LD 	H,B
    73   00057f 69                     	LD 	L,C
    74   000580 39                     	ADD 	HL,SP
    75                          
    76   000581 c5                     	PUSH 	BC
    77   000582 dde3                   	EX 	(SP),IX
    78   000584 c5                     	PUSH 	BC
    79   000585 c5                     	PUSH 	BC
    80   000586 dd39                   	ADD 	IX,SP
    81                          
    82   000588 e5                     	PUSH 	HL
    83   000589 210307                 	LD 	HL,GROUP3
    84                          
    85   00058c cd8e09          .TRYNDX	CALL 	FETCH
    86                          
    87   00058f 41                     	LD 	B,C
    88   000590 feed                   	CP 	$ED
    89   000592 280a                   	JR 	Z,CONFLG
    90                          
    91   000594 04                     	INC 	B
    92   000595 fedd                   	CP 	$DD
    93   000597 2805                   	JR 	Z,CONFLG
    94                          
    95   000599 04                     	INC 	B
    96   00059a fefd                   	CP 	$FD
    97   00059c 2008                   	JR 	NZ,NOTNDX
    98                          
    99   00059e dd7001          .CONFLG	LD 	(IX+1),B
   100   0005a1 04                     	INC 	B
   101   0005a2 10e8                   	DJNZ 	TRYNDX
   102                          
   103   0005a4 182a                   	JR 	NXBYTE
   104                          
   105   0005a6 4f              .NOTNDX	LD 	C,A
   106   0005a7 dd7e01                 	LD 	A,(IX+1)
   107   0005aa b7                     	OR 	A
   108   0005ab 2818                   	JR 	Z,NODISP
   109                          
   110   0005ad 79                     	LD 	A,C
   111   0005ae fecb                   	CP 	$CB
   112   0005b0 280d                   	JR 	Z,GETDIS
   113                          
   114   0005b2 e644                   	AND 	$44
   115   0005b4 fe04                   	CP 	4
   116   0005b6 2807                   	JR 	Z,GETDIS
   117                          
   118   0005b8 79                     	LD 	A,C
   119   0005b9 e6c0                   	AND 	$C0
   120   0005bb fe40                   	CP 	$40
   121   0005bd 2006                   	JR 	NZ,NODISP
   122                          
   123   0005bf cd8e09          .GETDIS	CALL 	FETCH
   124   0005c2 dd7702                 	LD 	(IX+2),A
   125                          
   126   0005c5 215b06          .NODISP	LD 	HL,GROUP1
   127   0005c8 79                     	LD 	A,C
   128   0005c9 fecb                   	CP 	$CB
   129   0005cb 2007                   	JR 	NZ,NEWMSK
   130                          
   131   0005cd 214006                 	LD 	HL,GROUP2
   132                          
   133   0005d0 cd8e09          .NXBYTE	CALL 	FETCH
   134   0005d3 4f                     	LD 	C,A
   135                          
   136   0005d4 7e              .NEWMSK	LD 	A,(HL)
   137   0005d5 b7                     	OR 	A
   138   0005d6 2816                   	JR 	Z,TABEND
   139                          
   140   0005d8 a1                     	AND 	C
   141   0005d9 23                     	INC 	HL
   142                          
   143   0005da 46              .NEWMOD	LD 	B,(HL)
   144   0005db 23                     	INC 	HL
   145   0005dc 04                     	INC 	B
   146   0005dd 28f5                   	JR 	Z,NEWMSK
   147                          
   148   0005df be              .TRYMAT	CP 	(HL)
   149   0005e0 23                     	INC 	HL
   150   0005e1 2807                   	JR 	Z,GETNDX
   151                          
   152   0005e3 cb7e                   	BIT 	7,(HL)
   153   0005e5 23                     	INC 	HL
   154   0005e6 28f7                   	JR 	Z,TRYMAT
   155                          
   156   0005e8 18f0                   	JR 	NEWMOD
   157                          
   158   0005ea 7e              .GETNDX	LD 	A,(HL)
   159   0005eb e67f                   	AND 	$7F
   160   0005ed 05                     	DEC 	B
   161                          
   162   0005ee e1              .TABEND	POP 	HL
   163   0005ef d5                     	PUSH 	DE
   164   0005f0 e5                     	PUSH 	HL
   165                          
   166   0005f1 eb                     	EX 	DE,HL
   167   0005f2 215907                 	LD 	HL,MONICS
   168   0005f5 cd7909                 	CALL 	XTRACT
   169                          
   170   0005f8 e1                     	POP 	HL
   171   0005f9 110500                 	LD 	DE,5
   172   0005fc 19                     	ADD 	HL,DE
   173   0005fd d1                     	POP 	DE
   174                          
   175   0005fe 78                     	LD 	A,B
   176   0005ff e6f0                   	AND 	$F0
   177   000601 2813                   	JR 	Z,SECOND
   178                          
   179   000603 1f                     	RRA
   180   000604 1f                     	RRA
   181   000605 1f                     	RRA
   182   000606 1f                     	RRA
   183   000607 c5                     	PUSH 	BC
   184                          
   185   000608 47                     	LD 	B,A
   186   000609 79                     	LD 	A,C
   187   00060a cd2908                 	CALL 	OPRND1
   188                          
   189   00060d c1                     	POP 	BC
   190   00060e 78                     	LD 	A,B
   191   00060f e60f                   	AND 	$0F
   192   000611 280b                   	JR 	Z,OPDONE
   193                          
   194   000613 362c                   	LD 	(HL),44  		;,
   195   000615 23                     	INC 	HL
   196                          
   197   000616 78              .SECOND	LD 	A,B
   198   000617 e60f                   	AND 	$0F
   199                          
   200   000619 47                     	LD 	B,A
   201   00061a 79                     	LD 	A,C
   202   00061b c42f08                 	CALL 	NZ,OPRND2
   203                          
   204   00061e 3e03            .OPDONE	LD 	A,3
   205   000620 dd9600                 	SUB 	(IX+0)
   206                          
   207   000623 e1                     	POP 	HL
   208   000624 e1                     	POP 	HL
   209   000625 dde1                   	POP 	IX
   210                          
   211   000627 380c                   	JR 	C,OUTEXT
   212                          
   213   000629 3c                     	INC 	A
   214   00062a 47                     	LD 	B,A
   215   00062b 80                     	ADD 	A,B
   216   00062c 80                     	ADD 	A,B
   217   00062d 47                     	LD 	B,A
   218                          
   219   00062e 3e20            .SPACES	LD 	A,$20
   220   000630 cdb509                 	CALL 	CHROP
   221   000633 10f9                   	DJNZ 	SPACES
   222                          
   223   000635 0612            .OUTEXT	LD 	B,18
   224                          
   225   000637 3b              .PUTOUT	DEC 	SP
   226   000638 e1                     	POP 	HL
   227   000639 7c                     	LD 	A,H
   228   00063a cdb509                 	CALL 	CHROP
   229   00063d 10f8                   	DJNZ 	PUTOUT
   230                          
   231   00063f c9                     	RET
   232                          
   233                          ;***********************
   234                          
   235   000640 c03640          .GROUP2	defb 	$C0,$36,$40
   236   000643 04802dc0be      	defb 	$04,$80,$2D,$C0,$BE
   237   000648 fff8060033      	defb 	$FF,$F8,$06,$00,$33
   238   00064d 0838103518      	defb 	$08,$38,$10,$35,$18
   239   000652 3a203f2840      	defb 	$3A,$20,$3F,$28,$40
   240   000657 300038c1        	defb 	$30,$00,$38,$C1
   241                          
   242                          
   243   00065b ff0000          .GROUP1	defb 	$FF,$00,$00
   244   00065e 2407320f37      	defb 	$24,$07,$32,$0F,$37
   245   000663 17311f3627      	defb 	$17,$31,$1F,$36,$27
   246   000668 0d2f0b373d      	defb 	$0D,$2F,$0B,$37,$3D
   247   00066d 3f067614c9      	defb 	$3F,$06,$76,$14,$C9
   248   000672 30d912f30f      	defb 	$30,$D9,$12,$F3,$0F
   249   000677 fb9172c602      	defb 	$FB,$91,$72,$C6,$02
   250   00067c ce01debc02      	defb 	$CE,$01,$DE,$BC,$02
   251   000681 d642e603ee      	defb 	$D6,$42,$E6,$03,$EE
   252   000686 43f625fe8c      	defb 	$43,$F6,$25,$FE,$8C
   253   00068b 0408930110      	defb 	$04,$08,$93,$01,$10
   254   000690 10189daf22      	defb 	$10,$18,$9D,$AF,$22
   255   000695 a2fa2aa2a7      	defb 	$A2,$FA,$2A,$A2,$A7
   256   00069a 32a27a3aa2      	defb 	$32,$A2,$7A,$3A,$A2
   257   00069f 03c31ccd85      	defb 	$03,$C3,$1C,$CD,$85
   258   0006a4 97d3aa79db      	defb 	$97,$D3,$AA,$79,$DB
   259   0006a9 9b5fe3930e      	defb 	$9B,$5F,$E3,$93,$0E
   260   0006ae e99c05eb93      	defb 	$E9,$9C,$05,$EB,$93
   261   0006b3 dff9a2ffc0      	defb 	$DF,$F9,$A2,$FF,$C0
   262   0006b8 b640a2fff8      	defb 	$B6,$40,$A2,$FF,$F8
   263   0006bd 7680028801      	defb 	$76,$80,$02,$88,$01
   264   0006c2 98bc069042      	defb 	$98,$BC,$06,$90,$42
   265   0006c7 a003a843b0      	defb 	$A0,$03,$A8,$43,$B0
   266   0006cc 25b88cffc7      	defb 	$25,$B8,$8C,$FF,$C7
   267   0006d1 0b0416058e      	defb 	$0B,$04,$16,$05,$8E
   268   0006d6 b206a220c0      	defb 	$B2,$06,$A2,$20,$C0
   269   0006db b023c21cc4      	defb 	$B0,$23,$C2,$1C,$C4
   270   0006e0 8510c7bbff      	defb 	$85,$10,$C7,$BB,$FF
   271   0006e5 cfd301a20d      	defb 	$CF,$D3,$01,$A2,$0D
   272   0006ea 03160b8efd      	defb 	$03,$16,$0B,$8E,$FD
   273   0006ef 098260c12b      	defb 	$09,$82,$60,$C1,$2B
   274   0006f4 c5acffe721      	defb 	$C5,$AC,$FF,$E7,$21
   275   0006f9 209dffefe7      	defb 	$20,$9D,$FF,$EF,$E7
   276   0006fe 02a27e0aa2      	defb 	$02,$A2,$7E,$0A,$A2
   277                          
   278                          
   279   000703 ff0044          .GROUP3	defb 	$FF,$00,$44
   280   000706 23452f4d2e      	defb 	$23,$45,$2F,$4D,$2E
   281   00070b 4e0067396f      	defb 	$4E,$00,$67,$39,$6F
   282   000710 3470007100      	defb 	$34,$70,$00,$71,$00
   283   000715 a021a10aa2      	defb 	$A0,$21,$A1,$0A,$A2
   284   00071a 1aa329a81f      	defb 	$1A,$A3,$29,$A8,$1F
   285   00071f a908aa18ab      	defb 	$A9,$08,$AA,$18,$AB
   286   000724 28b020b109      	defb 	$28,$B0,$20,$B1,$09
   287   000729 b219b327b8      	defb 	$B2,$19,$B3,$27,$B8
   288   00072e 1eb907ba17      	defb 	$1E,$B9,$07,$BA,$17
   289   000733 bba6ffc7b8      	defb 	$BB,$A6,$FF,$C7,$B8
   290   000738 409b8b41aa      	defb 	$40,$9B,$8B,$41,$AA
   291   00073d ffcffd423c      	defb 	$FF,$CF,$FD,$42,$3C
   292   000742 4a81ad43a2      	defb 	$4A,$81,$AD,$43,$A2
   293   000747 da4ba2ffe7      	defb 	$DA,$4B,$A2,$FF,$E7
   294   00074c 404695fff7      	defb 	$40,$46,$95,$FF,$F7
   295   000751 c747a27c57      	defb 	$C7,$47,$A2,$7C,$57
   296   000756 a2ff00          	defb 	$A2,$FF,$00
   297                          
   298                          ;_______________
   299                          
   300   000759 bf              .MONICS	defb 	$BF
   301   00075a 4144c3          	defb 	'A','D','C'+$80   	; ADC
   302   00075d 4144c4          	defb 	'A','D','D'+$80   	; ADD
   303   000760 414ec4          	defb 	'A','N','D'+$80   	; AND
   304   000763 4249d4          	defb 	'B','I','T'+$80   	; BIT
   305   000766 43414ccc        	defb 	'C','A','L','L'+$80	; CALL
   306   00076a 4343c6          	defb 	'C','C','F'+$80   	; CCF
   307   00076d 435044d2        	defb 	'C','P','D','R'+$80	; CPDR
   308   000771 4350c4          	defb 	'C','P','D'+$80   	; CPD
   309   000774 435049d2        	defb 	'C','P','I','R'+$80	; CPIR
   310   000778 4350c9          	defb 	'C','P','I'+$80   	; CPI
   311   00077b 4350cc          	defb 	'C','P','L'+$80   	; CPL
   312   00077e 43d0            	defb 	'C','P'+$80      	; CP
   313   000780 4441c1          	defb 	'D','A','A'+$80   	; DAA
   314   000783 4445c3          	defb 	'D','E','C'+$80   	; DEC
   315   000786 44c9            	defb 	'D','I'+$80      	; DI
   316   000788 444a4eda        	defb 	'D','J','N','Z'+$80	; DJNZ
   317   00078c 45c9            	defb 	'E','I'+$80      	; EI
   318   00078e 4558d8          	defb 	'E','X','X'+$80   	; EXX
   319   000791 45d8            	defb 	'E','X'+$80      	; EX
   320   000793 48414cd4        	defb 	'H','A','L','T'+$80	; HALT
   321   000797 49cd            	defb 	'I','M'+$80      	; IM
   322   000799 494ec3          	defb 	'I','N','C'+$80   	; INC
   323   00079c 494e44d2        	defb 	'I','N','D','R'+$80	; INDR
   324   0007a0 494ec4          	defb 	'I','N','D'+$80   	; IND
   325   0007a3 494e49d2        	defb 	'I','N','I','R'+$80	; INIR
   326   0007a7 494ec9          	defb 	'I','N','I'+$80   	; INI
   327   0007aa 49ce            	defb 	'I','N'+$80      	; IN
   328   0007ac 4ad0            	defb 	'J','P'+$80      	; JP
   329   0007ae 4ad2            	defb 	'J','R'+$80      	; JR
   330   0007b0 4c4444d2        	defb 	'L','D','D','R'+$80	; LDDR
   331   0007b4 4c44c4          	defb 	'L','D','D'+$80   	; LDD
   332   0007b7 4c4449d2        	defb 	'L','D','I','R'+$80	; LDIR
   333   0007bb 4c44c9          	defb 	'L','D','I'+$80   	; LDI
   334   0007be 4cc4            	defb 	'L','D'+$80      	; LD
   335   0007c0 4e45c7          	defb 	'N','E','G'+$80   	; NEG
   336   0007c3 4e4fd0          	defb 	'N','O','P'+$80   	; NOP
   337   0007c6 4fd2            	defb 	'O','R'+$80      	; OR
   338   0007c8 4f5444d2        	defb 	'O','T','D','R'+$80	; OTDR
   339   0007cc 4f5449d2        	defb 	'O','T','I','R'+$80	; OTIR
   340   0007d0 4f5554c4        	defb 	'O','U','T','D'+$80	; OUTD
   341   0007d4 4f5554c9        	defb 	'O','U','T','I'+$80	; OUTI
   342   0007d8 4f55d4          	defb 	'O','U','T'+$80   	; OUT
   343   0007db 504fd0          	defb 	'P','O','P'+$80   	; POP
   344   0007de 505553c8        	defb 	'P','U','S','H'+$80	; PUSH
   345   0007e2 5245d3          	defb 	'R','E','S'+$80   	; RES
   346   0007e5 524554c9        	defb 	'R','E','T','I'+$80	; RETI
   347   0007e9 524554ce        	defb 	'R','E','T','N'+$80	; RETN
   348   0007ed 5245d4          	defb 	'R','E','T'+$80   	; RET
   349   0007f0 524cc1          	defb 	'R','L','A'+$80   	; RLA
   350   0007f3 524c43c1        	defb 	'R','L','C','A'+$80	; RLCA
   351   0007f7 524cc3          	defb 	'R','L','C'+$80   	; RLC
   352   0007fa 524cc4          	defb 	'R','L','D'+$80   	; RLD
   353   0007fd 52cc            	defb 	'R','L'+$80      	; RL
   354   0007ff 5252c1          	defb 	'R','R','A'+$80   	; RRA
   355   000802 525243c1        	defb 	'R','R','C','A'+$80	; RA
   356   000806 5252c3          	defb 	'R','R','C'+$80   	; RRC
   357   000809 5252c4          	defb 	'R','R','D'+$80   	; RRD
   358   00080c 52d2            	defb 	'R','R'+$80      	; RR
   359   00080e 5253d4          	defb 	'R','S','T'+$80   	; RST
   360   000811 5342c3          	defb 	'S','B','C'+$80   	; SBC
   361   000814 5343c6          	defb 	'S','C','F'+$80   	; SCF
   362   000817 5345d4          	defb 	'S','E','T'+$80   	; SET
   363   00081a 534cc1          	defb 	'S','L','A'+$80   	; SLA
   364   00081d 5352c1          	defb 	'S','R','A'+$80   	; SRA
   365   000820 5352cc          	defb 	'S','R','L'+$80   	; SRL
   366   000823 5355c2          	defb 	'S','U','B'+$80   	; SUB
   367   000826 584fd2          	defb 	'X','O','R'+$80   	; XOR
   368                          
   369                          
   370                          
   371                          ;*****************
   372                          
   373   000829 1012            .OPRND1	DJNZ 	CONDIT
   374                          
   375   00082b e638            .RSTADR	AND 	$38
   376   00082d 182a                   	JR 	DA
   377                          
   378   00082f 101d            .OPRND2	DJNZ 	DAT8
   379                          
   380   000831 cd8e09          .RELADR	CALL 	FETCH
   381   000834 4f                     	LD 	C,A
   382   000835 17                     	RLA
   383   000836 9f                     	SBC 	A,A
   384   000837 47                     	LD 	B,A
   385   000838 eb                     	EX 	DE,HL
   386   000839 e5                     	PUSH 	HL
   387   00083a 09                     	ADD 	HL,BC
   388   00083b 182d                   	JR 	DHL
   389                          
   390   00083d 1f              .CONDIT	RRA
   391   00083e 1f                     	RRA
   392   00083f 1f                     	RRA
   393   000840 1013                   	DJNZ 	BITNUM
   394                          
   395   000842 cb67                   	BIT 	4,A
   396   000844 2002                   	JR 	NZ,ABS
   397                          
   398   000846 e603                   	AND 	3
   399                          
   400   000848 e607            .ABS   	AND 	7
   401   00084a c614                   	ADD 	A,$14
   402   00084c 1836                   	JR 	PS1
   403                          
   404   00084e 100d            .DAT8  	DJNZ 	DAT16
   405                          
   406   000850 cd8e09          .D8    	CALL 	FETCH
   407   000853 1804                   	JR 	DA
   408                          
   409   000855 1027            .BITNUM	DJNZ 	INTMOD
   410   000857 e607                   	AND 	7
   411                          
   412   000859 4f              .DA    	LD 	C,A
   413   00085a 97                     	SUB 	A
   414   00085b 1809                   	JR 	DAC
   415                          
   416   00085d 1038            .DAT16 	DJNZ 	EXAF
   417                          
   418   00085f cd8e09          .D16   	CALL 	FETCH
   419   000862 4f                     	LD 	C,A
   420   000863 cd8e09                 	CALL 	FETCH
   421                          
   422   000866 eb              .DAC   	EX 	DE,HL
   423   000867 e5                     	PUSH 	HL
   424   000868 67                     	LD 	H,A
   425   000869 69                     	LD 	L,C
   426                          
   427   00086a 0ef8            .DHL   	LD 	C,$F8
   428   00086c e5                     	PUSH 	HL
   429   00086d cd5909                 	CALL 	CONVHL
   430   000870 e1                     	POP 	HL
   431   000871 010a00                 	LD 	BC,$000A
   432   000874 b7                     	OR 	A
   433   000875 ed42                   	SBC 	HL,BC
   434   000877 e1                     	POP 	HL
   435   000878 eb                     	EX 	DE,HL
   436   000879 d8                     	RET 	C
   437                          
   438   00087a 3648                   	LD 	(HL),'H'
   439   00087c 23                     	INC 	HL
   440   00087d c9                     	RET
   441                          
   442                          
   443   00087e 1006            .INTMOD	DJNZ 	STKTOP
   444   000880 e603                   	AND 	3
   445   000882 c61c                   	ADD 	A,$1C
   446                          
   447   000884 1852            .PS1   	JR 	PS3
   448                          
   449   000886 0e13            .STKTOP	LD 	C,$13
   450   000888 05                     	DEC 	B
   451   000889 284c                   	JR 	Z,PS2
   452                          
   453   00088b 1042            .REG16P	DJNZ 	COMMON
   454   00088d 1f                     	RRA
   455   00088e e603                   	AND 	3
   456   000890 fe03                   	CP 	3
   457   000892 2068                   	JR 	NZ,RX
   458                          
   459   000894 3d                     	DEC 	A
   460   000895 1869                   	JR 	RNX
   461                          
   462   000897 0e0a            .EXAF  	LD 	C,$0A
   463   000899 05                     	DEC 	B
   464   00089a 283b                   	JR 	Z,PS2
   465                          
   466   00089c 0c              .EXDE  	INC 	C
   467   00089d 05                     	DEC 	B
   468   00089e 2837                   	JR 	Z,PS2
   469                          
   470   0008a0 102a            .REG8S 	DJNZ 	ACCUM
   471                          
   472   0008a2 e607            .R8    	AND 	7
   473   0008a4 fe06                   	CP 	6
   474   0008a6 2030                   	JR 	NZ,PS3
   475                          
   476   0008a8 3628                   	LD 	(HL),'('
   477   0008aa 23                     	INC 	HL
   478   0008ab cd1009                 	CALL 	REGX
   479   0008ae dd7e02                 	LD 	A,(IX+2)
   480   0008b1 b7                     	OR 	A
   481   0008b2 2858                   	JR 	Z,RP
   482                          
   483   0008b4 362b                   	LD 	(HL),43 		;+
   484   0008b6 07                     	RLCA
   485   0008b7 0f                     	RRCA
   486   0008b8 3004                   	JR 	NC,POS
   487                          
   488   0008ba 362d                   	LD 	(HL),45			;-
   489   0008bc ed44                   	NEG
   490                          
   491   0008be 23              .POS   	INC 	HL
   492   0008bf eb                     	EX 	DE,HL
   493   0008c0 e5                     	PUSH 	HL
   494   0008c1 60                     	LD 	H,B
   495   0008c2 6f                     	LD 	L,A
   496   0008c3 0efb                   	LD 	C,$FB
   497   0008c5 cd5909                 	CALL 	CONVHL
   498   0008c8 e1                     	POP 	HL
   499   0008c9 eb                     	EX 	DE,HL
   500   0008ca 1840                   	JR 	RP
   501                          
   502   0008cc 1f              .ACCUM 	RRA
   503   0008cd 1f                     	RRA
   504   0008ce 1f                     	RRA
   505                          
   506   0008cf 0e07            .COMMON	LD 	C,7
   507   0008d1 05                     	DEC 	B
   508   0008d2 2803                   	JR 	Z,PS2
   509                          
   510   0008d4 0d              .PORTC 	DEC 	C
   511   0008d5 1003                   	DJNZ 	IDAT8
   512                          
   513   0008d7 79              .PS2   	LD 	A,C
   514   0008d8 183b            .PS3   	JR 	PS4
   515                          
   516   0008da 1008            .IDAT8 	DJNZ 	IDAT16
   517   0008dc 3628                   	LD 	(HL),'('
   518   0008de 23                     	INC 	HL
   519   0008df cd5008                 	CALL 	D8
   520   0008e2 1828                   	JR 	RP
   521                          
   522   0008e4 1008            .IDAT16	DJNZ 	REG8
   523   0008e6 3628                   	LD 	(HL),'('
   524   0008e8 23                     	INC 	HL
   525   0008e9 cd5f08                 	CALL 	D16
   526   0008ec 181e                   	JR 	RP
   527                          
   528   0008ee 05              .REG8  	DEC 	B
   529   0008ef 28b1                   	JR 	Z,R8
   530                          
   531   0008f1 1004            .IPAREF 	DJNZ 	REG16
   532   0008f3 e609                   	AND 	9
   533   0008f5 181e                   	JR 	PS4
   534                          
   535   0008f7 1f              .REG16 	RRA
   536   0008f8 100a                   	DJNZ 	IREG16
   537                          
   538   0008fa e603            .R16   	AND 	3
   539   0008fc fe02            .RX    	CP  	2
   540   0008fe 2810                   	JR 	Z,REGX
   541                          
   542   000900 c60c            .RNX   	ADD 	A,$0C
   543   000902 1811                   	JR 	PS4
   544                          
   545   000904 100a            .IREG16	DJNZ 	REGX
   546   000906 3628                   	LD 	(HL),'('
   547   000908 23                     	INC 	HL
   548   000909 cdfa08                 	CALL 	R16
   549                          
   550   00090c 3629            .RP    	LD 	(HL),')'
   551   00090e 23                     	INC 	HL
   552   00090f c9                     	RET
   553                          
   554   000910 dd7e01          .REGX  	LD 	A,(IX+1)
   555   000913 c610                   	ADD 	A,$10
   556                          
   557   000915 eb              .PS4   	EX 	DE,HL
   558   000916 e5                     	PUSH 	HL
   559   000917 212009                 	LD 	HL,RGSTRS
   560   00091a cd7909                 	CALL 	XTRACT
   561   00091d e1                     	POP 	HL
   562   00091e eb                     	EX 	DE,HL
   563   00091f c9                     	RET
   564                          
   565                          ;*************
   566                          
   567   000920 c2              .RGSTRS	defb 	'B'				+$80
   568   000921 c3              	defb 	'C'       			+$80
   569   000922 c4              	defb 	'D'       			+$80
   570   000923 c5              	defb 	'E'       			+$80
   571   000924 c8              	defb 	'H'       			+$80
   572   000925 cc              	defb 	'L'       			+$80
   573   000926 2843a9          	defb 	'(','C',')' 			+$80
   574   000929 c1              	defb 	'A'       			+$80
   575   00092a c9              	defb 	'I'       			+$80
   576   00092b d2              	defb 	'R'       			+$80
   577   00092c 41462c4146a7    	defb 	'A','F',',','A','F','\''	+$80
   578   000932 44452c48cc      	defb 	'D','E',',','H','L'    		+$80
   579   000937 42c3            	defb 	'B','C'             		+$80
   580   000939 44c5            	defb 	'D','E'             		+$80
   581   00093b 41c6            	defb 	'A','F'             		+$80
   582   00093d 53d0            	defb 	'S','P'             		+$80
   583   00093f 48cc            	defb 	'H','L'             		+$80
   584   000941 49d8            	defb 	'I','X'             		+$80
   585   000943 49d9            	defb 	'I','Y'             		+$80
   586   000945 285350a9        	defb 	'(','S','P',')'       		+$80
   587   000949 4eda            	defb 	'N','Z'             		+$80
   588   00094b da              	defb 	'Z'                		+$80
   589   00094c 4ec3            	defb 	'N','C'             		+$80
   590   00094e c3              	defb 	'C'                		+$80
   591   00094f 50cf            	defb 	'P','O'             		+$80
   592   000951 50c5            	defb 	'P','E'             		+$80
   593   000953 d0              	defb 	'P'                		+$80
   594   000954 cd              	defb 	'M'                		+$80
   595   000955 b0              	defb 	'0'    				+$80
   596   000956 bf              	defb 	'?'    				+$80
   597   000957 b1              	defb 	'1'    				+$80
   598   000958 b2              	defb 	'2'    				+$80
   599                          
   600                          ;********************
   601                          
   602   000959 97              .CONVHL	SUB 	A
   603                          
   604   00095a f5              .CVHL1 	PUSH 	AF
   605   00095b 97                     	SUB 	A
   606   00095c 0610                   	LD 	B,16
   607                          
   608   00095e 81              .CVHL2 	ADD 	A,C
   609   00095f 3801                   	JR 	C,CVHL3
   610   000961 91                     	SUB 	C
   611                          
   612   000962 ed6a            .CVHL3 	ADC 	HL,HL
   613   000964 17                     	RLA
   614   000965 10f7                   	DJNZ 	CVHL2
   615                          
   616   000967 20f1                   	JR 	NZ,CVHL1
   617                          
   618   000969 fe0a                   	CP 	10
   619   00096b 04                     	INC 	B
   620   00096c 30ec                   	JR 	NC,CVHL1
   621                          
   622   00096e fe0a            .CVHL4 	CP 	10
   623   000970 de69                   	SBC 	A,$69
   624   000972 27                     	DAA
   625   000973 12                     	LD 	(DE),A
   626   000974 13                     	INC 	DE
   627   000975 f1                     	POP 	AF
   628   000976 20f6                   	JR 	NZ,CVHL4
   629                          
   630   000978 c9                     	RET
   631                          
   632                          ;****************
   633                          
   634   000979 b7              .XTRACT	OR 	A
   635   00097a 2808                   	JR 	Z,COPY
   636                          
   637   00097c cb7e            .SKIP  	BIT 	7,(HL)
   638   00097e 23                     	INC 	HL
   639   00097f 28fb                   	JR 	Z,SKIP
   640                          
   641   000981 3d                     	DEC 	A
   642   000982 20f8                   	JR 	NZ,SKIP
   643                          
   644   000984 7e              .COPY  	LD 	A,(HL)
   645   000985 07                     	RLCA
   646   000986 cb3f                   	SRL 	A
   647   000988 12                     	LD 	(DE),A
   648                          
   649   000989 13                     	INC 	DE
   650   00098a 23                     	INC 	HL
   651   00098b 30f7                   	JR 	NC,COPY
   652                          
   653   00098d c9                     	RET
   654                          
   655                          ;*******************
   656                          
   657   00098e 1a              .FETCH 	LD 	A,(DE)
   658   00098f 13                     	INC 	DE
   659   000990 dd3400                 	INC 	(IX+0)
   660   000993 f5                     	PUSH 	AF
   661   000994 cd9e09                 	CALL 	BYTSP
   662   000997 f1                     	POP 	AF
   663   000998 c9                     	RET
   664                          
   665   000999 7a              .ADRSP 	LD 	A,D
   666   00099a cda509                 	CALL 	BYTOP
   667   00099d 7b                     	LD 	A,E
   668                          
   669   00099e cda509          .BYTSP 	CALL 	BYTOP
   670   0009a1 3e20                   	LD 	A,$20
   671   0009a3 1810                   	JR 	CHROP
   672                          
   673   0009a5 f5              .BYTOP 	PUSH 	AF
   674   0009a6 1f                     	RRA
   675   0009a7 1f                     	RRA
   676   0009a8 1f                     	RRA
   677   0009a9 1f                     	RRA
   678   0009aa cdae09                 	CALL 	HEXOP
   679   0009ad f1                     	POP 	AF
   680                          
   681   0009ae e60f            .HEXOP 	AND 	$0F
   682   0009b0 fe0a                   	CP 	10
   683   0009b2 de69                   	SBC 	A,$69
   684   0009b4 27                     	DAA
   685                          
   686                          ; -----------------------------------
   687                          ;
   688                          ; End of John Kerr's DIS-Z80 routine.
   689                          ;
   690                          ; The next routine outputs a character.
   691                          ;
   692                          ; -------------------------------------
   693                          
   694   0009b5 e5              .CHROP 	PUSH 	HL
   695   0009b6 d5                     	PUSH 	DE
   696   0009b7 c5                     	PUSH 	BC
   697                          
   698   0009b8 4f              	ld	c, a
   699   0009b9 cde702          	call	conout
   700                          
   701                          ;	ld	h,0
   702                          ;	ld	l,a
   703                          ;	push	hl		; parameter passing
   704                          ;      	call 	fputc_cons	; This calls the Z88DK "put char" function
   705                          ;	pop	hl
   706                          
   707   0009bc c1                     	POP 	BC
   708   0009bd d1                     	POP 	DE
   709   0009be e1                     	POP 	HL
   710                          
   711   0009bf c9                     	RET
   712                          
   713                          
   714                          
z80.asm:
   792                          
