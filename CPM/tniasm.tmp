z80.asm1 FNAME "z80.bin"3CR: equ 0dh4NL: equ 0ah6C_SUM: equ 07C_TEMP: equ 18C_ADDR: equ 29C_ECHO: equ 412 ORG 0100h13 14 ld HL, (1) 15 ld BC, 03h16 add HL, BC17 add HL, BC 18 ld (conin+1), HL19 add HL, BC 20 ld (conout+1), HL 21 22 ld IX, sum23 ld (IX + C_ECHO), 1 24 25printmenu:26 ld HL, menutext27 call printstr29printprompt:30 call newline31 ld c, '>'32 call printaddr33 34enterkey: 35 call conin36 cp 'c'37 jp Z, changebyte38 cp 'd'39 jp Z, download40 cp 'f'41 jp Z, fillmem42 cp 'm'43 jp Z, dumpmem44 cp 'n'45 jp Z, newaddress46 cp 't'47 jp Z, transfer48 cp 'x'49 jr Z, exit50 cp '?'51 jr printmenu52 jr enterkey54exit:55 ret5861fillmem:62 ld HL, filltext63 call printstr64 65 call gethexbyte 66 ld h, a67 call gethexbyte68 ld l, a69 push HL70 push HL71 72 ld HL, lentext73 call printstr74 call gethexbyte 75 ld b, a76 call gethexbyte77 ld c, a78 79 ld a, b80 or a, c81 jr Z, printprompt82 dec BC83 84 ld HL, withtext85 call printstr86 call gethexbyte87 88 pop DE 89 inc DE90 91 pop HL92 ld (HL), a 93 94 ld a, b95 or a, c96 jr Z, printprompt97 98 LDIR99 100 jr printprompt102105transfer: 106 ld HL, transtext107 call printstr108 109 call gethexbyte 110 ld h, a111 call gethexbyte112 ld l, a113 push HL114 115 ld HL, lentext116 call printstr117 call gethexbyte 118 ld b, a119 call gethexbyte120 ld c, a122 ld HL, totext123 call printstr124 call gethexbyte 125 ld d, a126 call gethexbyte127 ld e, a129 pop HL130 131 LDIR132 133 jp printprompt134 135138changebyte:139 ld l, (IX + C_ADDR)140 ld h, (IX + C_ADDR + 1)141 ld a, (HL)142 call printhex143 ld c, ':'144 call conout145 call gethexbyte146 ld (HL), a147 jp printprompt150153newaddress:154 ld HL, addrtext155 call printstr156 call gethexbyte157 ld (IX + C_ADDR+1), a158 call gethexbyte159 ld (IX + C_ADDR), a160 jp printprompt163166dumpmem:167 ld (IX), 0 168 call newline169 ld d, 16170 ld HL, (addr)171 172dumpline:173 ld c, ':'174 call printaddr175 call space176 push HL177 178 ld b, 16179dumpmem1:180 ld a, (HL)181 inc HL182 call printhex183 call space184 ld a, b185 cp 9186 jr NZ, dumpmem3187 call space188dumpmem3: 189 djnz dumpmem1190 191 192 ld c, '|'193 call conout194 ld b, 16195 pop HL196 197dumpmem5:198 ld a, (HL)199 inc HL200 cp 32201 jr C, dumpmem6202 cp 126203 jr C, dumpmem4204dumpmem6:205 ld a, '.'206dumpmem4:207 ld c, a208 call conout209 djnz dumpmem5210 211 ld c, '|'212 call conout213 214 call newline215 ld (addr), hl216 dec d217 jr NZ, dumpline218 jp printprompt219 220 221225printaddr:226 ld a, (IX + C_ADDR + 1)227 call printhex228 ld a, (IX + C_ADDR)229 call printhex230 jp conout233237download: ld (IX + C_ECHO), 0 238 ld HL, downtext 239 call printstr240download2: 241 call conin 242 cp a, ':'243 jr NZ, download244 245 call gethexbyte 246 ld b, a 247 call gethexbyte 248 ld h, a249 call gethexbyte 250 ld l, a251 call gethexbyte 252 or a253 jr NZ, downend254 255download1:256 call gethexbyte 257 258 259 inc HL 260 djnz download1 261 262 call gethexbyte263 ld a, (IX + C_SUM)264 or a265 jr NZ, downerror266 267 jr download2268 269downend:270 call gethexbyte271 ld HL, downendtext272downend1:273 call printstr274 ld (IX + C_ECHO), 1 275 jp printmenu276 277downerror:278 ld HL, errortext279 jr downend1282287gethexbyte:288 call getnibble289 rla290 rla291 rla292 rla293 and 11110000b294 ld e, a295 call getnibble296 or e297 ld e, a298 add a, (IX + C_SUM)299 ld (sum), a300 ld a, e301 ret303 304308getnibble:309 call conin310 push AF311 ld a, (echo)312 or a313 jr Z, getnibble2314 pop AF315 push AF316 push BC317 ld c, a318 call conout319 pop BC320getnibble2:321 pop AF 322 sub '0'323 cp 10324 jr C, getnibble1325 sub 7326getnibble1:327 ret328 329 330334printstr:335 push BC336printstr2:337 ld a, (HL)338 inc HL339 or a340 jr Z, printstr1341 ld c, a342 call conout343 jr printstr2344printstr1:345 pop BC346 ret347 348menutext:349 DB CR, NL350 DB "*************************************************", CR, NL351 DB "***  Z80 Mini-Monitor  (c) '22  by R. Scholz  ***", CR, NL352 DB "*************************************************", CR, NL353 DB "? - This help", CR, NL354 DB "C - Change byte", CR, NL355 DB "D - Download Intel Hex file", CR, NL356 DB "F - Fill memory", CR, NL357 DB "M - Memory dump", CR, NL358 DB "N - New address", CR, NL359 DB "T - Transfer memory", CR, NL360 DB "X - eXit", CR, NL361 DB 0363downtext: DB "downloading...", CR, NL, 0364downendtext: DB "finished.", CR, NL, 0365addrtext: DB "address:", 0366errortext: DB "error!", 0367transtext: DB "transfer from:", 0368lentext: DB " len:", 0369totext: DB " to:", 0370filltext: DB "fill from:", 0371withtext: DB " with:", 0373sum: DB 0374temp: DB 0375addr: DB 0, 0376echo: DB 1377380 ld DE, codeout381 ld HL, codein382 call decodeBase64384 ld HL, codeout + 1 385 ld a, (HL) 386 call printhex387 dec HL 388 ld a, (HL)389 ld b, a390392 call printhex393 call newline394 inc HL395 inc HL396outloop:397 ld a, (HL)398 inc HL399 call printhex400 call space401 dec b402 jr NZ, outloop404409 call newline411 ld DE, codeout412 ld HL, codenew413 call codeBase64416 ld HL, codenew + 1417 ld a, (HL)418 call printhex419 dec HL420 ld b, (HL)421 ld a, b422 call printhex423 call newline424 inc HL425 inc HL426outloop1:427 ld a, (HL)428 inc HL429 call print431 djnz outloop1432 ret434441codeBase64:442 push HL 443 pop IY444 inc HL445 inc HL446 push HL 448 ld a, (DE)449 neg450 ld c, a451 inc DE452 ld a, (DE)453 neg454 ld b, a455 inc DE 456 push BC457 pop IX458 add IX, DE460 ld c, 0462code_loop1:463 ex DE, HL 464 ld a, c465 inc c466 and 3468 jr NZ, code1470 ld a, (HL)471 rra472 rra473 and 00111111b474 call codeB64475 jr code_loop477code1:478 dec a479 jr NZ, code2480 ld a, (HL)481 rla482 rla483 rla484 rla485 and 00110000b486 ld b, a487 inc HL488 ld a, (HL)489 rra490 rra491 rra492 rra493 and %00001111494 or b495 call codeB64496 jr code_loop498code2:499 dec a500 jr NZ, code3501 ld a, (HL)502 rla503 rla504 and 00111100b505 ld b, a506 inc HL507 ld a, (HL)508 rlca509 rlca510 and 00000011b511 or b512 call codeB64514code_loop:515 ex DE, HL 516 ld (HL), a 517 inc HL518 jr code_loop1520code3:521 ld a, (HL)522 inc HL523 and 00111111b524 call codeB64526 ex DE, HL 527 ld (HL), a 528 inc HL530 push DE531 push HL532 ex DE, HL533 push IX534 pop DE535 sbc HL, DE536 ld b, l537 pop HL538 pop DE540 jp M, code_loop1541 push HL542code3a:543 jr Z, code3b544 dec HL545 ld (HL), '='546 djnz code3a547code3b:548 pop HL549 pop DE550 sbc HL, DE551 ld (IY), l552 ld (IY + 1), h553 ret556563decodeBase64:564 ld c, (HL) 565 inc HL566 ld b, (HL)567 inc HL568 push BC569 exx570 pop BC 571 exx573 ld c, 0575 push DE 576 inc DE 577 inc DE578 push DE 580decode_loop1:581 call decodeB64 582 ld b, a583 ld a, c584 inc c585 jr C, decode_loop2 587 inc HL 588 ex DE, HL 589 and 3591 jr NZ, decode1593 ld a, b594 rla595 rla596 and 11111100b597 ld (HL), a598 jr decode_loop600decode1:601 dec a602 jr NZ, decode2603 ld a, b604 rra605 rra606 rra607 rra608 and 00000011b609 or (HL)610 ld (HL), a611 inc HL612 ld a, b613 rla614 rla615 rla616 rla617 and 11110000b618 ld (HL), a619 jr decode_loop621decode2:622 dec a623 jr NZ, decode3624 ld a, b625 rra626 rra627 and 00001111b628 or (HL)629 ld (HL), a630 inc HL631 ld a, b632 rrca633 rrca634 and 11000000b635 ld (HL), a636 jr decode_loop638decode3:639 ld a, b640 or (HL)641 ld (HL), a642 inc HL644decode_loop:645 ex DE, HL 647 exx648 dec BC649 ld a, b650 or c651 exx652 jr NZ, decode_loop1654decode_loop2:655 ex DE, HL 656 pop DE 658 or a 659 sbc HL, DE 660 pop DE 661 ex DE, HL 662 ld (HL), E 663 inc HL664 ld (HL), D665 ret669decodeB64:670 ld a, (HL)672 cp '='673 jr NZ, decodeB64e674 xor a675 scf676 ret677decodeB64e:678 cp '+'679 jr NZ, decodeB64a680 ld a, 62681 ret682decodeB64a:683 cp '/'684 jr NZ, decodeB64b685 ld a, 63686 ret687decodeB64b:688 cp ':'689 jr NC, decodeB64c 690 add a, 4 691 ret692decodeB64c:693 cp '['694 jr NC, decodeB64d 695 sub 'A' 696 ret697decodeB64d: 698 sub 71699 ret703codeB64:704 cp 26705 jr NC, codeB64a706 add a, 'A' 707 ret708codeB64a:709 cp 52710 jr NC, codeB64b711 add a, 71712 ret713codeB64b:714 cp 62715 jr NC, codeB64c716 sub 4717 ret718codeB64c:719 cp 62720 jr NZ, codeB64d721 ld a, '+'722 ret723codeB64d:724 ld a, '/'725 ret727730printhex:731 push AF732 push AF733 rra734 rra735 rra736 rra737 call printnib738 pop AF739 call printnib740 pop AF741 ret742printnib:743 and 0fh744 cp 0ah745 jr C, printnib1746 add a, 07h747printnib1:748 add a, '0'749print:750 push BC751 ld c, a752 call conout753 pop BC754 ret756newline:757 push BC758 ld c, 0dh759 call conout760 ld c, 0ah761 call conout762 pop BC763 ret765space:766 push BC767 ld c, ' '768 call conout769 pop BC770 ret772conout:773 jp 0fe0ch774conin:775 jp 0777codein:778 DW 172779 DB "AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn8="781codeout:782 DW 0783 DW 0, 0, 0, 0, 0, 0, 0, 0784 DW 0, 0, 0, 0, 0, 0, 0, 0785 DW 0, 0, 0, 0, 0, 0, 0, 0786 DW 0, 0, 0, 0, 0, 0, 0, 0787 DW 0, 0, 0, 0, 0, 0, 0, 0788 DW 0, 0, 0, 0, 0, 0, 0, 0789 DW 0, 0, 0, 0, 0, 0, 0, 0790 DW 0, 0, 0, 0, 0, 0, 0, 0791 DW 0 793codenew:794 DW 0795 DW 0, 0, 0, 0, 0, 0, 0, 0796 DW 0, 0, 0, 0, 0, 0, 0, 0797 DW 0, 0, 0, 0, 0, 0, 0, 0798 DW 0, 0, 0, 0, 0, 0, 0, 0799 DW 0, 0, 0, 0, 0, 0, 0, 0800 DW 0, 0, 0, 0, 0, 0, 0, 0801 DW 0, 0, 0, 0, 0, 0, 0, 0802 DW 0, 0, 0, 0, 0, 0, 0, 0803 DW 0, 0, 0, 0, 0, 0, 0, 0804 DW 0, 0, 0, 0, 0, 0, 0, 0805 DW 0, 0, 0, 0, 0, 0, 0, 0806 DW 0, 0, 0, 0, 0, 0, 0, 0807 DW 0, 0, 0, 0, 0, 0, 0, 0808 DW 0, 0, 0, 0, 0, 0, 0, 0809 DW 0, 0, 0, 0, 0, 0, 0, 0810 DW 0, 0, 0, 0, 0, 0, 0, 0811 DW 0 813818869 870